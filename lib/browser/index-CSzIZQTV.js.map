{"version":3,"file":"index-CSzIZQTV.js","sources":["../../../node_modules/@emotion-icons/material-outlined/AttachFile/AttachFile.esm.js","../../../node_modules/@emotion-icons/material-outlined/ErrorOutline/ErrorOutline.esm.js","../../../node_modules/@emotion-icons/material-rounded/Send/Send.esm.js","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFileIconTooltip.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFile.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatUploadedFiles.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/createFileUploadHandler.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/createDropHandler.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatFileUploadButton.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/fileUpload/ChatFileUploadDropzone.tsx","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/ChatInput.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var AttachFile = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 015 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 005 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n  }));\n});\nAttachFile.displayName = 'AttachFile';\nexport var AttachFileDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ErrorOutline = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n  }));\n});\nErrorOutline.displayName = 'ErrorOutline';\nexport var ErrorOutlineDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Send = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 5.51v3.71c0 .46.31.86.76.97L11 12l-7.24 1.81c-.45.11-.76.51-.76.97v3.71c0 .72.73 1.2 1.39.92l15.42-6.49c.82-.34.82-1.5 0-1.84L4.39 4.58C3.73 4.31 3 4.79 3 5.51z\"\n  }));\n});\nSend.displayName = 'Send';\nexport var SendDimensions = {\n  height: 24,\n  width: 24\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"~lib/theme\"\n\nexport const StyledChatInputContainer = styled.div`\n  border: none;\n  position: relative;\n  display: flex;\n`\n\nexport interface StyledChatInputProps {\n  extended: boolean\n}\n\nexport const StyledChatInput = styled.div<StyledChatInputProps>(\n  ({ theme, extended }) => ({\n    border: `${theme.sizes.borderWidth} solid`,\n    borderColor: theme.colors.widgetBorderColor ?? theme.colors.transparent,\n    borderRadius: theme.radii.chatInput,\n    backgroundColor: theme.colors.secondaryBg,\n    position: \"relative\",\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing.lg,\n    maxHeight: extended ? \"none\" : theme.sizes.minElementHeight,\n    gap: theme.spacing.sm,\n    overflow: \"hidden\",\n\n    \":focus-within\": {\n      borderColor: theme.colors.primary,\n    },\n  })\n)\n\ninterface StyledSendIconButtonProps {\n  disabled: boolean\n  extended: boolean\n}\n\nexport const StyledSendIconButton = styled.button<StyledSendIconButtonProps>(\n  ({ theme, disabled, extended }) => {\n    const lightTheme = hasLightBackgroundColor(theme)\n    const [cleanIconColor, dirtyIconColor] = lightTheme\n      ? [theme.colors.gray60, theme.colors.gray80]\n      : [theme.colors.gray80, theme.colors.gray40]\n    return {\n      border: \"none\",\n      backgroundColor: theme.colors.transparent,\n      borderTopRightRadius: extended ? \"0\" : theme.radii.chatInput,\n      borderTopLeftRadius: extended ? theme.radii.default : \"0\",\n      borderBottomRightRadius: theme.radii.chatInput,\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      lineHeight: theme.lineHeights.none,\n      margin: theme.spacing.none,\n      padding: theme.spacing.sm,\n      color: disabled ? cleanIconColor : dirtyIconColor,\n      pointerEvents: \"auto\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n      \":focus\": {\n        outline: \"none\",\n      },\n      \"&:focus-visible\": {\n        backgroundColor: lightTheme\n          ? theme.colors.gray10\n          : theme.colors.gray90,\n      },\n      \"&:hover\": {\n        color: theme.colors.primary,\n      },\n      \"&:disabled, &:disabled:hover, &:disabled:active\": {\n        backgroundColor: theme.colors.transparent,\n        borderColor: theme.colors.transparent,\n        color: theme.colors.gray,\n        cursor: \"not-allowed\",\n      },\n    }\n  }\n)\n\nexport const StyledSendIconButtonContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  // Negative margin to offset the parent border width when we align button to end\n  marginBottom: `-${theme.sizes.borderWidth}`,\n  pointerEvents: \"none\",\n}))\n\nexport const StyledInputInstructionsContainer = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  bottom: \"0px\",\n  // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n  // and some additional margin between the icon and the text (spacing.sm).\n  right: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from \"@emotion/styled\"\n\nimport { FileStatus } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\n\nexport interface StyledChatFileUploadDropzoneProps {\n  height: string\n}\n\n// A transparent dropzone with a minimum height if chat input is short.\n// If chat input grows taller under multi-line, the dropzone will grow with it.\nexport const StyledChatFileUploadDropzone =\n  styled.div<StyledChatFileUploadDropzoneProps>(({ theme, height }) => ({\n    backgroundColor: theme.colors.transparent,\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    minHeight: `max(${theme.sizes.emptyDropdownHeight}, ${height})`,\n    width: \"100%\",\n    zIndex: theme.zIndices.priority,\n  }))\n\nexport interface StyledChatFileUploadDropzoneLabelProps {\n  height: string\n}\n\nexport const StyledChatFileUploadDropzoneLabel =\n  styled.div<StyledChatFileUploadDropzoneLabelProps>(({ theme, height }) => ({\n    border: `${theme.sizes.borderWidth} solid`,\n    borderColor: theme.colors.primary,\n    borderRadius: theme.radii.chatInput,\n    backgroundColor: theme.colors.secondaryBg,\n    color: theme.colors.primary,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: height,\n    width: \"100%\",\n    fontWeight: theme.fontWeights.bold,\n  }))\n\nexport interface StyledFileUploadButtonContainerProps {\n  disabled: boolean\n}\n\nexport const StyledFileUploadButtonContainer =\n  styled.div<StyledFileUploadButtonContainerProps>(({ theme, disabled }) => ({\n    display: \"flex\",\n    alignItems: \"top\",\n    height: \"100%\",\n    // Negative margin to offset the parent border width when we align to top\n    marginTop: `-${theme.sizes.borderWidth}`,\n    cursor: disabled ? \"not-allowed\" : \"auto\",\n  }))\n\nexport interface StyledFileUploadButtonProps {\n  disabled: boolean\n}\n\nexport const StyledFileUploadButton = styled.div<StyledFileUploadButtonProps>(\n  ({ disabled }) => ({\n    pointerEvents: disabled ? \"none\" : \"auto\",\n  })\n)\n\nexport const StyledVerticalDivider = styled.div(({ theme }) => ({\n  // We need to use hard-coded in order to align the divider centered\n  // given the height of chat input and divider.\n  marginTop: \"0.625em\",\n  marginLeft: theme.spacing.sm,\n  height: theme.spacing.xl,\n  width: theme.sizes.borderWidth,\n  backgroundColor: theme.colors.fadedText20,\n}))\n\nexport const StyledChatUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingLeft: theme.spacing.sm,\n  paddingRight: theme.spacing.sm,\n  overflowX: \"auto\",\n}))\n\nexport const StyledUploadedChatFileList = styled.div({\n  display: \"flex\",\n})\n\nexport const StyledUploadedChatFileListItem = styled.div({\n  flex: \"0 0 auto\",\n})\n\nexport const StyledChatUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing.sm,\n  gap: theme.spacing.twoXS,\n}))\n\nexport const StyledChatUploadedFileIcon = styled.div(({ theme }) => ({\n  color: theme.colors.fadedText60,\n}))\n\nexport interface StyledChatUploadedFileStatusProps {\n  fileStatus: FileStatus\n}\n\nexport const StyledChatUploadedFileName =\n  styled.div<StyledChatUploadedFileStatusProps>(({ theme, fileStatus }) => ({\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    color:\n      fileStatus.type === \"uploaded\"\n        ? theme.colors.bodyText\n        : theme.colors.fadedText60,\n  }))\n\nexport const StyledChatUploadedFileSize = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.md,\n  color: theme.colors.fadedText60,\n}))\n\nexport const StyledChatUploadedFileDeleteButton = styled.small(\n  ({ theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    maxHeight: theme.sizes.smallElementHeight,\n    color: theme.colors.fadedText60,\n    \"& :hover\": {\n      color: theme.colors.bodyText,\n    },\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\n\nimport Tooltip, { Placement } from \"~lib/components/shared/Tooltip\"\n\ninterface Props {\n  children: ReactElement\n  content: string\n}\n\nexport function ChatUploadedFileIconTooltip({\n  children,\n  content,\n}: Props): ReactElement {\n  const theme = useTheme()\n  return (\n    <Tooltip\n      content={content}\n      placement={Placement.TOP}\n      overrides={{\n        Body: {\n          style: {\n            top: `-${theme.sizes.minElementHeight}`,\n          },\n        },\n      }}\n    >\n      {children}\n    </Tooltip>\n  )\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC } from \"react\"\n\nimport {\n  Clear,\n  ErrorOutline,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\nimport { useTheme } from \"@emotion/react\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon, { StyledSpinnerIcon } from \"~lib/components/shared/Icon\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\nimport {\n  ErrorStatus,\n  UploadFileInfo,\n} from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { assertNever } from \"~lib/util/assertNever\"\n\nimport {\n  StyledChatUploadedFile,\n  StyledChatUploadedFileDeleteButton,\n  StyledChatUploadedFileIcon,\n  StyledChatUploadedFileName,\n  StyledChatUploadedFileSize,\n} from \"./styled-components\"\nimport { ChatUploadedFileIconTooltip } from \"./ChatUploadedFileIconTooltip\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface ChatUploadedFileIconProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const ChatUploadedFileIcon: FC<ChatUploadedFileIconProps> = ({\n  fileInfo,\n}) => {\n  const theme = useTheme()\n  const { type } = fileInfo.status\n\n  switch (type) {\n    case \"uploading\":\n      return (\n        <StyledSpinnerIcon\n          usingCustomTheme={false}\n          data-testid=\"stChatInputFileIconSpinner\"\n          size=\"lg\"\n          margin=\"0\"\n          padding=\"0\"\n        />\n      )\n    case \"error\":\n      return (\n        <ChatUploadedFileIconTooltip\n          content={(fileInfo.status as ErrorStatus).errorMessage}\n        >\n          <Icon color={theme.colors.red} content={ErrorOutline} size=\"lg\" />\n        </ChatUploadedFileIconTooltip>\n      )\n    case \"uploaded\":\n      return <Icon content={InsertDriveFile} size=\"lg\" />\n    default:\n      assertNever(type)\n      return null\n  }\n}\n\nconst ChatUploadedFile = ({\n  fileInfo,\n  onDelete,\n}: Props): React.ReactElement => (\n  <StyledChatUploadedFile\n    className=\"stChatInputFile\"\n    data-testid=\"stChatInputFile\"\n  >\n    <StyledChatUploadedFileIcon>\n      <ChatUploadedFileIcon fileInfo={fileInfo} />\n    </StyledChatUploadedFileIcon>\n    <StyledChatUploadedFileName\n      className=\"stChatInputFileName\"\n      data-testid=\"stChatInputFileName\"\n      title={fileInfo.name}\n      fileStatus={fileInfo.status}\n    >\n      {fileInfo.name}\n    </StyledChatUploadedFileName>\n    <StyledChatUploadedFileSize>\n      {getSizeDisplay(fileInfo.size, FileSize.Byte)}\n    </StyledChatUploadedFileSize>\n    <StyledChatUploadedFileDeleteButton data-testid=\"stChatInputDeleteBtn\">\n      <BaseButton\n        onClick={() => onDelete(fileInfo.id)}\n        kind={BaseButtonKind.MINIMAL}\n      >\n        <Icon content={Clear} size=\"lg\" />\n      </BaseButton>\n    </StyledChatUploadedFileDeleteButton>\n  </StyledChatUploadedFile>\n)\n\nexport default ChatUploadedFile\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\n\nimport {\n  StyledChatUploadedFiles,\n  StyledUploadedChatFileList,\n  StyledUploadedChatFileListItem,\n} from \"./styled-components\"\nimport ChatUploadedFile from \"./ChatUploadedFile\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst ChatUploadedFiles = ({ items, onDelete }: Props): ReactElement => (\n  <StyledChatUploadedFiles data-testid=\"stChatUploadedFiles\">\n    <StyledUploadedChatFileList>\n      {items.map(file => (\n        <StyledUploadedChatFileListItem key={file.id}>\n          <ChatUploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedChatFileListItem>\n      ))}\n    </StyledUploadedChatFileList>\n  </StyledChatUploadedFiles>\n)\n\nexport default ChatUploadedFiles\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from \"axios\"\n\nimport { IFileURLs } from \"@streamlit/protobuf\"\n\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { WidgetInfo } from \"~lib/WidgetStateManager\"\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\n\ninterface CreateUploadFileParams {\n  getNextLocalFileId: () => number\n  addFiles: (files: UploadFileInfo[]) => void\n  updateFile: (id: number, fileInfo: UploadFileInfo) => void\n  uploadClient: FileUploadClient\n  element: WidgetInfo\n  onUploadProgress: (e: ProgressEvent, id: number) => void\n  onUploadComplete: (id: number, fileURLs: IFileURLs) => void\n}\n\nexport const createUploadFileHandler =\n  ({\n    getNextLocalFileId,\n    addFiles,\n    updateFile,\n    uploadClient,\n    element,\n    onUploadProgress,\n    onUploadComplete,\n  }: CreateUploadFileParams) =>\n  (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      getNextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    addFiles([uploadingFileInfo])\n\n    uploadClient\n      .uploadFile(\n        {\n          formId: \"\", // TODO[kajarnec] fix this probably with uploadFile refactoring\n          ...element,\n        },\n        fileURLs.uploadUrl as string,\n        file,\n        e => onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport zip from \"lodash/zip\"\nimport { ErrorCode as FileErrorCode, FileRejection } from \"react-dropzone\"\n\nimport { FileURLs as FileURLsProto, IFileURLs } from \"@streamlit/protobuf\"\n\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { UploadFileInfo } from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { getRejectedFileInfo } from \"~lib/util/FileHelper\"\n\ninterface CreateDropHandlerParams {\n  acceptMultipleFiles: boolean\n  maxFileSize: number\n  uploadClient: FileUploadClient\n  uploadFile: (fileURLs: FileURLsProto, file: File) => void\n  addFiles: (files: UploadFileInfo[]) => void\n  getNextLocalFileId: () => number\n  deleteExistingFiles: () => void\n  onUploadComplete: () => void\n}\n\nexport const createDropHandler =\n  ({\n    acceptMultipleFiles,\n    maxFileSize,\n    uploadClient,\n    uploadFile,\n    addFiles,\n    getNextLocalFileId,\n    deleteExistingFiles,\n    onUploadComplete,\n  }: CreateDropHandlerParams) =>\n  (acceptedFiles: File[], rejectedFiles: FileRejection[]): void => {\n    // If only single file upload is allowed but multiple were dropped/selected,\n    // all files will be rejected by default. In this case, we take the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !acceptMultipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        file => file.errors?.[0].code === FileErrorCode.TooManyFiles\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    if (!acceptMultipleFiles && acceptedFiles.length > 0) {\n      deleteExistingFiles()\n    }\n\n    uploadClient\n      .fetchFileURLs(acceptedFiles)\n      .then((fileURLsArray: IFileURLs[]) => {\n        zip(fileURLsArray, acceptedFiles).forEach(\n          ([fileURLs, acceptedFile]) => {\n            uploadFile(fileURLs as FileURLsProto, acceptedFile as File)\n          }\n        )\n      })\n      .catch((errorMessage: string) => {\n        addFiles(\n          acceptedFiles.map(f => {\n            return new UploadFileInfo(f.name, f.size, getNextLocalFileId(), {\n              type: \"error\",\n              errorMessage,\n            })\n          })\n        )\n      })\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected =>\n        getRejectedFileInfo(rejected, getNextLocalFileId(), maxFileSize)\n      )\n      addFiles(rejectedInfos)\n    }\n\n    onUploadComplete()\n  }\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { AttachFile } from \"@emotion-icons/material-outlined\"\n\nimport { EmotionTheme } from \"~lib/theme\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport { AcceptFileValue } from \"~lib/util/utils\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\n\nimport {\n  StyledFileUploadButton,\n  StyledFileUploadButtonContainer,\n  StyledVerticalDivider,\n} from \"./styled-components\"\n\nexport interface Props {\n  getRootProps: any\n  getInputProps: any\n  acceptFile: AcceptFileValue\n  disabled: boolean\n  theme: EmotionTheme\n}\n\nconst ChatFileUploadButton = ({\n  getRootProps,\n  getInputProps,\n  acceptFile,\n  disabled,\n  theme,\n}: Props): React.ReactElement => (\n  <StyledFileUploadButtonContainer disabled={disabled}>\n    <StyledFileUploadButton\n      data-testid=\"stChatInputFileUploadButton\"\n      disabled={disabled}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <TooltipIcon\n        content={`Upload or drag and drop ${\n          acceptFile === AcceptFileValue.Multiple ? \"files\" : \"a file\"\n        }`}\n        placement={Placement.TOP}\n        onMouseEnterDelay={500}\n      >\n        <BaseButton kind={BaseButtonKind.MINIMAL} disabled={disabled}>\n          <Icon\n            content={AttachFile}\n            size=\"lg\"\n            color={\n              disabled ? theme.colors.fadedText40 : theme.colors.fadedText60\n            }\n          />\n        </BaseButton>\n      </TooltipIcon>\n    </StyledFileUploadButton>\n    <StyledVerticalDivider />\n  </StyledFileUploadButtonContainer>\n)\n\nexport default ChatFileUploadButton\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { AcceptFileValue } from \"~lib/util/utils\"\n\nimport {\n  StyledChatFileUploadDropzone,\n  StyledChatFileUploadDropzoneLabel,\n} from \"./styled-components\"\n\nexport interface Props {\n  getRootProps: any\n  getInputProps: any\n  acceptFile: AcceptFileValue\n  inputHeight: string\n}\n\nconst ChatFileUploadDropzone = ({\n  getRootProps,\n  getInputProps,\n  acceptFile,\n  inputHeight,\n}: Props): React.ReactElement => (\n  <>\n    <StyledChatFileUploadDropzone height={inputHeight} {...getRootProps()}>\n      <input {...getInputProps()} />\n    </StyledChatFileUploadDropzone>\n    <StyledChatFileUploadDropzoneLabel height={inputHeight}>\n      {`Drag and drop ${\n        acceptFile === AcceptFileValue.Multiple ? \"files\" : \"a file\"\n      } here`}\n    </StyledChatFileUploadDropzoneLabel>\n  </>\n)\n\nexport default ChatFileUploadDropzone\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  memo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport { Send } from \"@emotion-icons/material-rounded\"\nimport { Textarea as UITextArea } from \"baseui/textarea\"\nimport { useDropzone } from \"react-dropzone\"\n\nimport {\n  ChatInput as ChatInputProto,\n  FileUploaderState as FileUploaderStateProto,\n  IChatInputValue,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/protobuf\"\n\nimport {\n  AcceptFileValue,\n  chatInputAcceptFileProtoValueToEnum,\n  isNullOrUndefined,\n} from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport InputInstructions from \"~lib/components/shared/InputInstructions/InputInstructions\"\nimport { isEnterKeyPressed } from \"~lib/util/inputUtils\"\nimport {\n  UploadedStatus,\n  UploadFileInfo,\n} from \"~lib/components/widgets/FileUploader/UploadFileInfo\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { getAccept } from \"~lib/components/widgets/FileUploader/utils\"\nimport { FileSize, sizeConverter } from \"~lib/util/FileHelper\"\nimport { useCalculatedWidth } from \"~lib/hooks/useCalculatedWidth\"\n\nimport {\n  StyledChatInput,\n  StyledChatInputContainer,\n  StyledInputInstructionsContainer,\n  StyledSendIconButton,\n  StyledSendIconButtonContainer,\n} from \"./styled-components\"\nimport ChatUploadedFiles from \"./fileUpload/ChatUploadedFiles\"\nimport { createUploadFileHandler } from \"./fileUpload/createFileUploadHandler\"\nimport { createDropHandler } from \"./fileUpload/createDropHandler\"\nimport ChatFileUploadButton from \"./fileUpload/ChatFileUploadButton\"\nimport ChatFileUploadDropzone from \"./fileUpload/ChatFileUploadDropzone\"\n\nexport interface Props {\n  disabled: boolean\n  element: ChatInputProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  fragmentId?: string\n}\n\n// We want to show easily that there's scrolling so we deliberately choose\n// a half size.\nconst MAX_VISIBLE_NUM_LINES = 6.5\n// Rounding errors can arbitrarily create scrollbars. We add a rounding offset\n// to manage it better.\nconst ROUNDING_OFFSET = 1\n\nconst updateFile = (\n  id: number,\n  fileInfo: UploadFileInfo,\n  currentFiles: UploadFileInfo[]\n): UploadFileInfo[] => currentFiles.map(f => (f.id === id ? fileInfo : f))\n\nconst getFile = (\n  localFileId: number,\n  currentFiles: UploadFileInfo[]\n): UploadFileInfo | undefined => currentFiles.find(f => f.id === localFileId)\n\nfunction ChatInput({\n  disabled,\n  element,\n  widgetMgr,\n  fragmentId,\n  uploadClient,\n}: Props): React.ReactElement {\n  const theme = useTheme()\n\n  const chatInputRef = useRef<HTMLTextAreaElement>(null)\n  const counterRef = useRef(0)\n  const heightGuidance = useRef({ minHeight: 0, maxHeight: 0 })\n\n  const [width, elementRef] = useCalculatedWidth()\n\n  // The value specified by the user via the UI. If the user didn't touch this widget's UI, the default value is used.\n  const [value, setValue] = useState(element.default)\n  // The value of the height of the textarea. It depends on a variety of factors including the default height, and autogrowing\n  const [scrollHeight, setScrollHeight] = useState(0)\n  const [isInputExtended, setIsInputExtended] = useState(false)\n  const [files, setFiles] = useState<UploadFileInfo[]>([])\n\n  const [fileDragged, setFileDragged] = useState(false)\n\n  /**\n   * @returns True if the user-specified state.value has not yet been synced to\n   * the WidgetStateManager.\n   */\n  const dirty = useMemo(() => {\n    if (files.some(f => f.status.type === \"uploading\")) {\n      return false\n    }\n\n    return value !== \"\" || files.length > 0\n  }, [files, value])\n\n  const acceptFile = chatInputAcceptFileProtoValueToEnum(element.acceptFile)\n  const maxFileSize = sizeConverter(\n    element.maxUploadSizeMb,\n    FileSize.Megabyte,\n    FileSize.Byte\n  )\n\n  const addFiles = useCallback(\n    (filesToAdd: UploadFileInfo[]): void =>\n      setFiles(currentFiles => [...currentFiles, ...filesToAdd]),\n    []\n  )\n\n  const deleteFile = useCallback(\n    (fileId: number): void => {\n      setFiles(files => {\n        const file = getFile(fileId, files)\n        if (isNullOrUndefined(file)) {\n          return files\n        }\n\n        if (file.status.type === \"uploading\") {\n          // Cancel request as the file hasn't been uploaded.\n          // However, it may have been received by the server so we'd still\n          // send out a request to delete it.\n          file.status.cancelToken.cancel()\n        }\n\n        if (\n          file.status.type === \"uploaded\" &&\n          file.status.fileUrls.deleteUrl\n        ) {\n          uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n        }\n\n        return files.filter(file => file.id !== fileId)\n      })\n    },\n    [uploadClient]\n  )\n\n  const createChatInputWidgetFilesValue = (): FileUploaderStateProto => {\n    const uploadedFileInfo: UploadedFileInfoProto[] = files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        const { fileId, fileUrls } = status as UploadedStatus\n        return new UploadedFileInfoProto({\n          fileId,\n          fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  const getNextLocalFileId = (): number => {\n    return counterRef.current++\n  }\n\n  const dropHandler = createDropHandler({\n    acceptMultipleFiles: acceptFile === AcceptFileValue.Multiple,\n    maxFileSize: maxFileSize,\n    uploadClient: uploadClient,\n    uploadFile: createUploadFileHandler({\n      getNextLocalFileId,\n      addFiles,\n      updateFile: (id: number, fileInfo: UploadFileInfo) => {\n        setFiles(files => updateFile(id, fileInfo, files))\n      },\n      uploadClient,\n      element,\n      onUploadProgress: (e: ProgressEvent, fileId: number) => {\n        setFiles(files => {\n          const file = getFile(fileId, files)\n          if (isNullOrUndefined(file) || file.status.type !== \"uploading\") {\n            return files\n          }\n\n          const newProgress = Math.round((e.loaded * 100) / e.total)\n          if (file.status.progress === newProgress) {\n            return files\n          }\n\n          return updateFile(\n            fileId,\n            file.setStatus({\n              type: \"uploading\",\n              cancelToken: file.status.cancelToken,\n              progress: newProgress,\n            }),\n            files\n          )\n        })\n      },\n      onUploadComplete: (id: number, fileUrls: IFileURLs) => {\n        setFiles(files => {\n          const curFile = getFile(id, files)\n          if (\n            isNullOrUndefined(curFile) ||\n            curFile.status.type !== \"uploading\"\n          ) {\n            // The file may have been canceled right before the upload\n            // completed. In this case, we just bail.\n            return files\n          }\n\n          return updateFile(\n            curFile.id,\n            curFile.setStatus({\n              type: \"uploaded\",\n              fileId: fileUrls.fileId as string,\n              fileUrls,\n            }),\n            files\n          )\n        })\n      },\n    }),\n    addFiles,\n    getNextLocalFileId,\n    deleteExistingFiles: () => files.forEach(f => deleteFile(f.id)),\n    onUploadComplete: () => {\n      if (chatInputRef.current) {\n        chatInputRef.current.focus()\n      }\n    },\n  })\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: dropHandler,\n    multiple: acceptFile === AcceptFileValue.Multiple,\n    accept: getAccept(element.fileType),\n    maxSize: maxFileSize,\n  })\n\n  const getScrollHeight = (): number => {\n    let scrollHeight = 0\n    const { current: textarea } = chatInputRef\n    if (textarea) {\n      const placeholder = textarea.placeholder\n      textarea.placeholder = \"\"\n      textarea.style.height = \"auto\"\n      scrollHeight = textarea.scrollHeight\n      textarea.placeholder = placeholder\n      textarea.style.height = \"\"\n    }\n\n    return scrollHeight\n  }\n\n  const handleSubmit = (): void => {\n    // We want the chat input to always be in focus\n    // even if the user clicks the submit button\n    if (chatInputRef.current) {\n      chatInputRef.current.focus()\n    }\n\n    if (!dirty || disabled) {\n      return\n    }\n\n    const composedValue: IChatInputValue = {\n      data: value,\n      fileUploaderState: createChatInputWidgetFilesValue(),\n    }\n\n    widgetMgr.setChatInputValue(\n      element,\n      composedValue,\n      { fromUi: true },\n      fragmentId\n    )\n    setFiles([])\n    setValue(\"\")\n    setScrollHeight(0)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    const { metaKey, ctrlKey, shiftKey } = e\n    const shouldSubmit =\n      isEnterKeyPressed(e) && !shiftKey && !ctrlKey && !metaKey\n\n    if (shouldSubmit) {\n      e.preventDefault()\n\n      handleSubmit()\n    }\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = e.target\n    const { maxChars } = element\n\n    if (maxChars !== 0 && value.length > maxChars) {\n      return\n    }\n\n    setValue(value)\n    setScrollHeight(getScrollHeight())\n  }\n\n  useEffect(() => {\n    if (element.setValue) {\n      // We are intentionally setting this to avoid regularly calling this effect.\n      // TODO: Update to match React best practices\n      // eslint-disable-next-line react-compiler/react-compiler\n      element.setValue = false\n      const val = element.value || \"\"\n      setValue(val)\n    }\n  }, [element])\n\n  // Use a Layout Effect since we are dealing with measurements and we want to\n  // avoid flickering.\n  // @see https://react.dev/reference/react/useLayoutEffect#usage\n  useLayoutEffect(() => {\n    if (chatInputRef.current) {\n      const { offsetHeight } = chatInputRef.current\n      heightGuidance.current.minHeight = offsetHeight\n      heightGuidance.current.maxHeight = offsetHeight * MAX_VISIBLE_NUM_LINES\n    }\n  }, [chatInputRef])\n\n  useEffect(() => {\n    const handleDragEnter = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (!fileDragged && event.dataTransfer?.types.includes(\"Files\")) {\n        setFileDragged(true)\n      }\n    }\n\n    const handleDragLeave = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (fileDragged) {\n        // This check prevents the dropzone from flickering since the dragleave\n        // event could fire when user is dragging within the window\n        if (\n          (event.clientX <= 0 && event.clientY <= 0) ||\n          (event.clientX >= window.innerWidth &&\n            event.clientY >= window.innerHeight)\n        ) {\n          setFileDragged(false)\n        }\n      }\n    }\n\n    const handleDrop = (event: DragEvent): void => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (fileDragged) {\n        setFileDragged(false)\n      }\n    }\n\n    window.addEventListener(\"dragover\", handleDragEnter)\n    window.addEventListener(\"drop\", handleDrop)\n    window.addEventListener(\"dragleave\", handleDragLeave)\n\n    return () => {\n      window.removeEventListener(\"dragover\", handleDragEnter)\n      window.removeEventListener(\"drop\", handleDrop)\n      window.removeEventListener(\"dragleave\", handleDragLeave)\n    }\n  }, [fileDragged])\n\n  // Use a Layout Effect since we are dealing with measurements and we want to\n  // avoid flickering.\n  // @see https://react.dev/reference/react/useLayoutEffect#usage\n  useLayoutEffect(() => {\n    const { minHeight } = heightGuidance.current\n    setIsInputExtended(\n      scrollHeight > 0 && chatInputRef.current\n        ? Math.abs(scrollHeight - minHeight) > ROUNDING_OFFSET\n        : false\n    )\n  }, [scrollHeight])\n\n  const { placeholder, maxChars } = element\n  const { maxHeight } = heightGuidance.current\n\n  const showDropzone = acceptFile !== AcceptFileValue.None && fileDragged\n\n  return (\n    <>\n      {acceptFile === AcceptFileValue.None ? null : (\n        <ChatUploadedFiles items={[...files]} onDelete={deleteFile} />\n      )}\n      <StyledChatInputContainer\n        className=\"stChatInput\"\n        data-testid=\"stChatInput\"\n        ref={elementRef}\n      >\n        {showDropzone ? (\n          <ChatFileUploadDropzone\n            getRootProps={getRootProps}\n            getInputProps={getInputProps}\n            acceptFile={acceptFile}\n            inputHeight={\n              isInputExtended\n                ? `${scrollHeight + ROUNDING_OFFSET}px`\n                : theme.sizes.minElementHeight\n            }\n          />\n        ) : (\n          <StyledChatInput extended={isInputExtended}>\n            {acceptFile === AcceptFileValue.None ? null : (\n              <ChatFileUploadButton\n                getRootProps={getRootProps}\n                getInputProps={getInputProps}\n                acceptFile={acceptFile}\n                disabled={disabled}\n                theme={theme}\n              />\n            )}\n            <UITextArea\n              inputRef={chatInputRef}\n              value={value}\n              placeholder={placeholder}\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              aria-label={placeholder}\n              disabled={disabled}\n              rows={1}\n              overrides={{\n                Root: {\n                  style: {\n                    minHeight: theme.sizes.minElementHeight,\n                    outline: \"none\",\n                    borderLeftWidth: \"0\",\n                    borderRightWidth: \"0\",\n                    borderTopWidth: \"0\",\n                    borderBottomWidth: \"0\",\n                    borderTopLeftRadius: \"0\",\n                    borderTopRightRadius: \"0\",\n                    borderBottomRightRadius: \"0\",\n                    borderBottomLeftRadius: \"0\",\n                  },\n                },\n                Input: {\n                  props: {\n                    \"data-testid\": \"stChatInputTextArea\",\n                  },\n                  style: {\n                    lineHeight: theme.lineHeights.inputWidget,\n                    \"::placeholder\": {\n                      opacity: \"0.7\",\n                    },\n                    height: isInputExtended\n                      ? `${scrollHeight + ROUNDING_OFFSET}px`\n                      : \"auto\",\n                    maxHeight: maxHeight ? `${maxHeight}px` : \"none\",\n                    // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                    paddingLeft: theme.spacing.none,\n                    paddingBottom: theme.spacing.sm,\n                    paddingTop: theme.spacing.sm,\n                    // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n                    // and some additional margin between the icon and the text (spacing.sm).\n                    paddingRight: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n                  },\n                },\n              }}\n            />\n            {/* Hide the character limit in small widget sizes */}\n            {width > theme.breakpoints.hideWidgetDetails && (\n              <StyledInputInstructionsContainer>\n                <InputInstructions\n                  dirty={dirty}\n                  value={value}\n                  maxLength={maxChars}\n                  type=\"chat\"\n                  // Chat Input are not able to be used in forms\n                  inForm={false}\n                />\n              </StyledInputInstructionsContainer>\n            )}\n            <StyledSendIconButtonContainer>\n              <StyledSendIconButton\n                onClick={handleSubmit}\n                disabled={!dirty || disabled}\n                extended={isInputExtended}\n                data-testid=\"stChatInputSubmitButton\"\n              >\n                <Icon content={Send} size=\"xl\" color=\"inherit\" />\n              </StyledSendIconButton>\n            </StyledSendIconButtonContainer>\n          </StyledChatInput>\n        )}\n      </StyledChatInputContainer>\n    </>\n  )\n}\n\nexport default memo(ChatInput)\n"],"names":["AttachFile","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","ErrorOutline","Send","StyledChatInputContainer","target","name","styles","StyledChatInput","theme","extended","border","sizes","borderWidth","borderColor","colors","widgetBorderColor","transparent","borderRadius","radii","chatInput","backgroundColor","secondaryBg","position","flexGrow","display","alignItems","paddingLeft","spacing","lg","maxHeight","minElementHeight","gap","sm","overflow","primary","StyledSendIconButton","disabled","lightTheme","hasLightBackgroundColor","cleanIconColor","dirtyIconColor","gray60","gray80","gray40","borderTopRightRadius","borderTopLeftRadius","default","borderBottomRightRadius","justifyContent","lineHeight","lineHeights","none","margin","padding","color","pointerEvents","outline","gray10","gray90","gray","cursor","StyledSendIconButtonContainer","height","right","marginBottom","StyledInputInstructionsContainer","bottom","iconSizes","xl","StyledChatFileUploadDropzone","left","minHeight","emptyDropdownHeight","width","zIndex","zIndices","priority","StyledChatFileUploadDropzoneLabel","fontWeight","fontWeights","bold","StyledFileUploadButtonContainer","marginTop","StyledFileUploadButton","StyledVerticalDivider","marginLeft","fadedText20","StyledChatUploadedFiles","tight","paddingRight","overflowX","StyledUploadedChatFileList","StyledUploadedChatFileListItem","StyledChatUploadedFile","twoXS","StyledChatUploadedFileIcon","fadedText60","StyledChatUploadedFileName","fileStatus","textOverflow","whiteSpace","type","bodyText","StyledChatUploadedFileSize","marginRight","md","StyledChatUploadedFileDeleteButton","smallElementHeight","ChatUploadedFileIconTooltip","children","content","useTheme","Tooltip","Placement","TOP","Body","style","top","ChatUploadedFileIcon","fileInfo","status","jsx","StyledSpinnerIcon","errorMessage","Icon","red","InsertDriveFile","assertNever","ChatUploadedFile","onDelete","jsxs","getSizeDisplay","size","FileSize","Byte","BaseButton","id","BaseButtonKind","MINIMAL","Clear","ChatUploadedFiles","items","map","file","createUploadFileHandler","getNextLocalFileId","addFiles","updateFile","uploadClient","element","onUploadProgress","onUploadComplete","fileURLs","cancelToken","axios","CancelToken","source","uploadingFileInfo","UploadFileInfo","progress","uploadFile","formId","uploadUrl","e","token","then","catch","err","isCancel","setStatus","toString","createDropHandler","acceptMultipleFiles","maxFileSize","deleteExistingFiles","acceptedFiles","rejectedFiles","length","firstFileIndex","findIndex","errors","code","FileErrorCode","TooManyFiles","push","splice","fetchFileURLs","fileURLsArray","forEach","acceptedFile","f","rejectedInfos","rejected","getRejectedFileInfo","ChatFileUploadButton","getRootProps","getInputProps","acceptFile","TooltipIcon","AcceptFileValue","Multiple","fadedText40","ChatFileUploadDropzone","inputHeight","Fragment","MAX_VISIBLE_NUM_LINES","ROUNDING_OFFSET","currentFiles","getFile","localFileId","find","ChatInput","widgetMgr","fragmentId","chatInputRef","useRef","counterRef","heightGuidance","elementRef","useCalculatedWidth","value","setValue","useState","scrollHeight","setScrollHeight","isInputExtended","setIsInputExtended","files","setFiles","fileDragged","setFileDragged","dirty","useMemo","some","chatInputAcceptFileProtoValueToEnum","sizeConverter","maxUploadSizeMb","Megabyte","useCallback","filesToAdd","deleteFile","fileId","isNullOrUndefined","cancel","fileUrls","deleteUrl","filter","createChatInputWidgetFilesValue","uploadedFileInfo","UploadedFileInfoProto","FileUploaderStateProto","current","dropHandler","newProgress","Math","round","loaded","total","curFile","focus","useDropzone","onDrop","multiple","accept","getAccept","fileType","maxSize","getScrollHeight","textarea","placeholder","handleSubmit","composedValue","data","fileUploaderState","setChatInputValue","fromUi","handleKeyDown","metaKey","ctrlKey","shiftKey","isEnterKeyPressed","preventDefault","handleChange","maxChars","useEffect","val","useLayoutEffect","offsetHeight","handleDragEnter","event","stopPropagation","dataTransfer","types","includes","handleDragLeave","clientX","clientY","window","innerWidth","innerHeight","handleDrop","addEventListener","removeEventListener","abs","showDropzone","None","UITextArea","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderBottomLeftRadius","Input","inputWidget","opacity","paddingBottom","paddingTop","breakpoints","hideWidgetDetails","InputInstructions","memo"],"mappings":"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","x_google_ignoreList":[0,1,2]}