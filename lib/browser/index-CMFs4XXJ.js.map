{"version":3,"file":"index-CMFs4XXJ.js","sources":["../../../node_modules/@emotion-icons/material-outlined/CloudUpload/CloudUpload.esm.js","../../../node_modules/@emotion-icons/material-outlined/Error/Error.esm.js","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/styled-components.ts","../../../streamlit/frontend/lib/src/components/shared/TextElements/Text.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzoneInstructions.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileDropzone.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/Pagination.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/withPagination/withPagination.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFile.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/UploadedFiles.tsx","../../../streamlit/frontend/lib/src/components/widgets/FileUploader/FileUploader.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var CloudUpload = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95A5.469 5.469 0 0112 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11A2.98 2.98 0 0122 15c0 1.65-1.35 3-3 3zM8 13h2.55v3h2.9v-3H16l-4-4z\"\n  }));\n});\nCloudUpload.displayName = 'CloudUpload';\nexport var CloudUploadDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Error = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n  }));\n});\nError.displayName = 'Error';\nexport var ErrorDimensions = {\n  height: 24,\n  width: 24\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\n\nimport { convertRemToPx, EmotionTheme } from \"~lib/theme\"\n\nexport interface StyledFileDropzone {\n  isDisabled: boolean\n}\n\nexport const StyledFileDropzoneSection = styled.section<StyledFileDropzone>(\n  ({ isDisabled, theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colors.secondaryBg,\n    borderRadius: theme.radii.default,\n    border: theme.colors.widgetBorderColor\n      ? `${theme.sizes.borderWidth} solid ${theme.colors.widgetBorderColor}`\n      : undefined,\n    \":focus\": {\n      outline: \"none\",\n    },\n    \":focus-visible\": {\n      boxShadow: `0 0 0 1px ${theme.colors.primary}`,\n    },\n    color: isDisabled ? theme.colors.gray : theme.colors.bodyText,\n  })\n)\n\nexport const StyledFileDropzoneInstructions = styled.div({\n  marginRight: \"auto\",\n  alignItems: \"center\",\n  display: \"flex\",\n})\n\nexport const StyledFileDropzoneInstructionsFileUploaderIcon = styled.span(\n  ({ theme }) => ({\n    color: theme.colors.darkenedBgMix100,\n    marginRight: theme.spacing.lg,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsStyledSpan = styled.span(\n  ({ theme }) => ({\n    marginBottom: theme.spacing.twoXS,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsColumn = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nexport const StyledUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingTop: theme.spacing.md,\n  paddingLeft: theme.spacing.lg,\n  paddingRight: theme.spacing.lg,\n}))\n\nexport const StyledUploadedFilesList = styled.ul(({ theme }) => ({\n  listStyleType: \"none\",\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFilesListItem = styled.li(({ theme }) => ({\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFileData = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"baseline\",\n  flex: 1,\n  paddingLeft: theme.spacing.lg,\n  overflow: \"hidden\",\n}))\n\nexport const StyledUploadedFileName = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.sm,\n  marginBottom: theme.spacing.twoXS,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledErrorMessage = styled.span(({ theme }) => ({\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledFileIcon = styled.div(({ theme }) => ({\n  display: \"flex\",\n  padding: theme.spacing.twoXS,\n  color: theme.colors.darkenedBgMix100,\n}))\n\nexport const StyledFileError = styled.small(({ theme }) => ({\n  color: theme.colors.red,\n  fontSize: theme.fontSizes.sm,\n  height: theme.fontSizes.sm,\n  lineHeight: theme.fontSizes.sm,\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledFileErrorIcon = styled.span({})\n\nconst compactFileUploader = (theme: EmotionTheme): CSSObject => ({\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneSection as any]: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneInstructions as any]: {\n    marginBottom: theme.spacing.lg,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileDropzoneInstructionsFileUploaderIcon as any]: {\n    display: \"none\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFiles as any]: {\n    paddingRight: theme.spacing.lg,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFile as any]: {\n    maxWidth: \"inherit\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    marginBottom: theme.spacing.sm,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFileName as any]: {\n    width: theme.sizes.full,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFileData as any]: {\n    flexDirection: \"column\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileError as any]: {\n    height: \"auto\",\n    whiteSpace: \"initial\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledFileErrorIcon as any]: {\n    display: \"none\",\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  [StyledUploadedFilesListItem as any]: {\n    margin: theme.spacing.none,\n    padding: theme.spacing.none,\n  },\n})\n\ninterface StyledFileUploaderProps {\n  width: number\n}\nexport const StyledFileUploader = styled.div<StyledFileUploaderProps>(\n  ({ theme, width }) => {\n    if (width < convertRemToPx(\"23rem\")) {\n      return compactFileUploader(theme)\n    }\n  }\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport enum Kind {\n  DANGER = \"danger\",\n}\n\ninterface TextProps {\n  kind?: Kind\n}\n\nexport const Small = styled.small<TextProps>(({ kind, theme }) => {\n  const { danger, fadedText60 } = theme.colors\n\n  return {\n    color: kind === Kind.DANGER ? danger : fadedText60,\n    fontSize: theme.fontSizes.sm,\n    lineHeight: theme.lineHeights.tight,\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { CloudUpload } from \"@emotion-icons/material-outlined\"\n\nimport Icon from \"~lib/components/shared/Icon\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\nimport { Small } from \"~lib/components/shared/TextElements\"\n\nimport {\n  StyledFileDropzoneInstructions,\n  StyledFileDropzoneInstructionsColumn,\n  StyledFileDropzoneInstructionsFileUploaderIcon,\n  StyledFileDropzoneInstructionsStyledSpan,\n} from \"./styled-components\"\n\nexport interface Props {\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n}\n\nconst FileDropzoneInstructions = ({\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n}: Props): React.ReactElement => (\n  <StyledFileDropzoneInstructions data-testid=\"stFileUploaderDropzoneInstructions\">\n    <StyledFileDropzoneInstructionsFileUploaderIcon>\n      <Icon content={CloudUpload} size=\"threeXL\" />\n    </StyledFileDropzoneInstructionsFileUploaderIcon>\n    <StyledFileDropzoneInstructionsColumn>\n      <StyledFileDropzoneInstructionsStyledSpan>\n        Drag and drop file{multiple ? \"s\" : \"\"} here\n      </StyledFileDropzoneInstructionsStyledSpan>\n      <Small>\n        {`Limit ${getSizeDisplay(maxSizeBytes, FileSize.Byte, 0)} per file`}\n        {acceptedExtensions.length\n          ? ` • ${acceptedExtensions\n              .map(ext => ext.replace(/^\\./, \"\").toUpperCase())\n              .join(\", \")}`\n          : null}\n      </Small>\n    </StyledFileDropzoneInstructionsColumn>\n  </StyledFileDropzoneInstructions>\n)\n\nexport default memo(FileDropzoneInstructions)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport Dropzone, { FileRejection } from \"react-dropzone\"\n\nimport BaseButton, {\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"~lib/components/shared/BaseButton\"\n\nimport { StyledFileDropzoneSection } from \"./styled-components\"\nimport FileDropzoneInstructions from \"./FileDropzoneInstructions\"\nimport { getAccept } from \"./utils\"\n\nexport interface Props {\n  disabled: boolean\n  onDrop: (acceptedFiles: File[], rejectedFiles: FileRejection[]) => void\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n  label: string\n}\n\nconst FileDropzone = ({\n  onDrop,\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n  disabled,\n  label,\n}: Props): React.ReactElement => (\n  <Dropzone\n    onDrop={onDrop}\n    multiple={multiple}\n    accept={getAccept(acceptedExtensions)}\n    maxSize={maxSizeBytes}\n    disabled={disabled}\n    // react-dropzone v12+ uses the File System Access API by default,\n    // causing the bug described in https://github.com/streamlit/streamlit/issues/6176.\n    useFsAccessApi={false}\n  >\n    {({ getRootProps, getInputProps }) => (\n      <StyledFileDropzoneSection\n        {...getRootProps()}\n        data-testid=\"stFileUploaderDropzone\"\n        isDisabled={disabled}\n        aria-label={label}\n      >\n        <input\n          data-testid=\"stFileUploaderDropzoneInput\"\n          {...getInputProps()}\n        />\n        <FileDropzoneInstructions\n          multiple={multiple}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={maxSizeBytes}\n        />\n        <BaseButton\n          kind={BaseButtonKind.SECONDARY}\n          disabled={disabled}\n          size={BaseButtonSize.SMALL}\n        >\n          Browse files\n        </BaseButton>\n      </StyledFileDropzoneSection>\n    )}\n  </Dropzone>\n)\n\nexport default memo(FileDropzone)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledPagination = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  paddingBottom: theme.spacing.twoXS,\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledPaginators = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.colors.fadedText40,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport { ChevronLeft, ChevronRight } from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport { Small } from \"~lib/components/shared/TextElements\"\n\nimport { StyledPagination, StyledPaginators } from \"./styled-components\"\n\nexport interface Props {\n  currentPage: number\n  totalPages: number\n  pageSize: number\n  onNext: (event: React.SyntheticEvent<HTMLElement>) => void\n  onPrevious: (event: React.SyntheticEvent<HTMLElement>) => void\n}\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onNext,\n  onPrevious,\n}: Props): React.ReactElement => {\n  return (\n    <StyledPagination data-testid=\"stFileUploaderPagination\">\n      <Small>{`Showing page ${currentPage} of ${totalPages}`}</Small>\n      <StyledPaginators>\n        <BaseButton onClick={onPrevious} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronLeft} size=\"xl\" />\n        </BaseButton>\n        <BaseButton onClick={onNext} kind={BaseButtonKind.MINIMAL}>\n          <Icon content={ChevronRight} size=\"xl\" />\n        </BaseButton>\n      </StyledPaginators>\n    </StyledPagination>\n  )\n}\n\nexport default memo(Pagination)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement, useEffect, useState } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport { usePrevious } from \"~lib/util/Hooks\"\n\nimport Pagination from \"./Pagination\"\n\nexport interface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  items: any[]\n  pageSize: number\n  resetOnAdd: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\nconst calculateNumPages = (items: any[], pageSize: number): number =>\n  Math.ceil(items.length / pageSize)\n\nconst withPagination = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n  WrappedComponent: ComponentType<React.PropsWithChildren<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n): ComponentType<React.PropsWithChildren<any>> => {\n  const WithPagination = ({\n    pageSize,\n    items,\n    resetOnAdd,\n    ...props\n  }: Props): ReactElement => {\n    const [currentPage, updateCurrentPage] = useState<number>(0)\n    const [totalPages, updateTotalPages] = useState<number>(() =>\n      calculateNumPages(items, pageSize)\n    )\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: Replace 'any' with a more specific type.\n    const prevItems: any[] = usePrevious(items)\n\n    useEffect(() => {\n      if (prevItems && prevItems.length !== items.length) {\n        updateTotalPages(calculateNumPages(items, pageSize))\n      }\n      if (prevItems && prevItems.length < items.length) {\n        if (resetOnAdd) {\n          updateCurrentPage(0)\n        }\n      } else if (currentPage + 1 >= totalPages) {\n        updateCurrentPage(totalPages - 1)\n      }\n    }, [items, currentPage, pageSize, prevItems, resetOnAdd, totalPages])\n\n    const onNext = (): void => {\n      updateCurrentPage(Math.min(currentPage + 1, totalPages - 1))\n    }\n\n    const onPrevious = (): void => {\n      updateCurrentPage(Math.max(0, currentPage - 1))\n    }\n\n    const paginatedItems = items.slice(\n      currentPage * pageSize,\n      currentPage * pageSize + pageSize\n    )\n    return (\n      <>\n        <WrappedComponent items={paginatedItems} {...props} />\n        {items.length > pageSize ? (\n          <Pagination\n            pageSize={pageSize}\n            totalPages={totalPages}\n            currentPage={currentPage + 1}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        ) : null}\n      </>\n    )\n  }\n  return hoistNonReactStatics(WithPagination, WrappedComponent)\n}\n\nexport default withPagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport {\n  Clear,\n  Error,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\n\nimport BaseButton, { BaseButtonKind } from \"~lib/components/shared/BaseButton\"\nimport Icon from \"~lib/components/shared/Icon\"\nimport ProgressBar, { Size } from \"~lib/components/shared/ProgressBar\"\nimport { Small } from \"~lib/components/shared/TextElements\"\nimport { FileSize, getSizeDisplay } from \"~lib/util/FileHelper\"\n\nimport {\n  StyledErrorMessage,\n  StyledFileError,\n  StyledFileErrorIcon,\n  StyledFileIcon,\n  StyledUploadedFile,\n  StyledUploadedFileData,\n  StyledUploadedFileName,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface UploadedFileStatusProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const UploadedFileStatus = ({\n  fileInfo,\n}: UploadedFileStatusProps): React.ReactElement | null => {\n  if (fileInfo.status.type === \"uploading\") {\n    return <ProgressBar value={fileInfo.status.progress} size={Size.SMALL} />\n  }\n\n  if (fileInfo.status.type === \"error\") {\n    return (\n      <StyledFileError>\n        <StyledErrorMessage data-testid=\"stFileUploaderFileErrorMessage\">\n          {fileInfo.status.errorMessage}\n        </StyledErrorMessage>\n        <StyledFileErrorIcon>\n          <Icon content={Error} size=\"lg\" />\n        </StyledFileErrorIcon>\n      </StyledFileError>\n    )\n  }\n\n  if (fileInfo.status.type === \"uploaded\") {\n    return <Small>{getSizeDisplay(fileInfo.size, FileSize.Byte)}</Small>\n  }\n\n  return null\n}\n\nconst UploadedFile = ({ fileInfo, onDelete }: Props): React.ReactElement => {\n  return (\n    <StyledUploadedFile\n      className=\"stFileUploaderFile\"\n      data-testid=\"stFileUploaderFile\"\n    >\n      <StyledFileIcon>\n        <Icon content={InsertDriveFile} size=\"twoXL\" />\n      </StyledFileIcon>\n      <StyledUploadedFileData className=\"stFileUploaderFileData\">\n        <StyledUploadedFileName\n          className=\"stFileUploaderFileName\"\n          data-testid=\"stFileUploaderFileName\"\n          title={fileInfo.name}\n        >\n          {fileInfo.name}\n        </StyledUploadedFileName>\n        <UploadedFileStatus fileInfo={fileInfo} />\n      </StyledUploadedFileData>\n      <div data-testid=\"stFileUploaderDeleteBtn\">\n        <BaseButton\n          onClick={() => onDelete(fileInfo.id)}\n          kind={BaseButtonKind.MINIMAL}\n        >\n          <Icon content={Clear} size=\"lg\" />\n        </BaseButton>\n      </div>\n    </StyledUploadedFile>\n  )\n}\n\nexport default memo(UploadedFile)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo, ReactElement } from \"react\"\n\nimport withPagination, { PaginationProps } from \"./withPagination\"\nimport UploadedFile from \"./UploadedFile\"\nimport {\n  StyledUploadedFiles,\n  StyledUploadedFilesList,\n  StyledUploadedFilesListItem,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst UploadedFileList = ({ items, onDelete }: Props): ReactElement => {\n  return (\n    <StyledUploadedFilesList>\n      {items.map(file => (\n        <StyledUploadedFilesListItem key={file.id}>\n          <UploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedFilesListItem>\n      ))}\n    </StyledUploadedFilesList>\n  )\n}\n\nexport const PaginatedFiles = withPagination(UploadedFileList)\n\nconst UploadedFiles = (props: Props & PaginationProps): ReactElement => (\n  <StyledUploadedFiles>\n    <PaginatedFiles {...props} />\n  </StyledUploadedFiles>\n)\nexport default memo(UploadedFiles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { memo } from \"react\"\n\nimport axios from \"axios\"\nimport isEqual from \"lodash/isEqual\"\nimport zip from \"lodash/zip\"\nimport { FileRejection } from \"react-dropzone\"\nimport { flushSync } from \"react-dom\"\n\nimport {\n  FileUploader as FileUploaderProto,\n  FileUploaderState as FileUploaderStateProto,\n  FileURLs as FileURLsProto,\n  IFileURLs,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/protobuf\"\n\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n} from \"~lib/util/utils\"\nimport { FormClearHelper } from \"~lib/components/widgets/Form\"\nimport {\n  FileSize,\n  getRejectedFileInfo,\n  sizeConverter,\n} from \"~lib/util/FileHelper\"\nimport { FileUploadClient } from \"~lib/FileUploadClient\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"~lib/components/widgets/BaseWidget\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport { withCalculatedWidth } from \"~lib/components/core/Layout/withCalculatedWidth\"\n\nimport FileDropzone from \"./FileDropzone\"\nimport { StyledFileUploader } from \"./styled-components\"\nimport UploadedFiles from \"./UploadedFiles\"\nimport { UploadedStatus, UploadFileInfo } from \"./UploadFileInfo\"\n\ninterface InnerProps {\n  disabled: boolean\n  element: FileUploaderProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  fragmentId?: string\n  width: number\n}\n\nexport type Props = Omit<InnerProps, \"width\">\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * List of files dropped on the FileUploader by the user. This list includes\n   * rejected files that will not be updated.\n   */\n  files: UploadFileInfo[]\n}\n\nclass FileUploader extends React.PureComponent<InnerProps, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  /**\n   * A counter for assigning unique internal IDs to each file tracked\n   * by the uploader. These IDs are used to update file state internally,\n   * and are separate from the serverFileIds that are returned by the server.\n   */\n  private localFileIdCounter = 1\n\n  /**\n   * A flag to handle the case where a file uploader that only accepts one file\n   * at a time has its file replaced, which we want to treat as a single change\n   * rather than the deletion of a file followed by the upload of another.\n   * Doing this ensures that the script (and thus callbacks, etc) is only run a\n   * single time when replacing a file.  Note that deleting a file and uploading\n   * a new one with two interactions (clicking the 'X', then dragging a file\n   * into the file uploader) will still cause the script to execute twice.\n   */\n  private forceUpdatingStatus = false\n\n  public constructor(props: InnerProps) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  get initialValue(): State {\n    const emptyState = { files: [] }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (isNullOrUndefined(widgetValue)) {\n      return emptyState\n    }\n\n    const { uploadedFileInfo } = widgetValue\n    if (isNullOrUndefined(uploadedFileInfo) || uploadedFileInfo.length === 0) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n\n        const fileId = f.fileId as string\n        const fileUrls = f.fileUrls as FileURLsProto\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          fileId,\n          fileUrls,\n        })\n      }),\n    }\n  }\n\n  public override componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return this.props.element.maxUploadSizeMb, converted to bytes.\n   */\n  private get maxUploadSizeInBytes(): number {\n    const maxMbs = this.props.element.maxUploadSizeMb\n    return sizeConverter(maxMbs, FileSize.Megabyte, FileSize.Byte)\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating) || this.forceUpdatingStatus) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public override componentDidUpdate = (): void => {\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: true,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  public override componentDidMount(): void {\n    const newWidgetValue = this.createWidgetValue()\n    const { element, widgetMgr, fragmentId } = this.props\n\n    // Set the state value on mount, to avoid triggering an extra rerun after\n    // the first rerun.\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (prevWidgetValue === undefined) {\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        newWidgetValue,\n        {\n          fromUi: false,\n        },\n        fragmentId\n      )\n    }\n  }\n\n  private createWidgetValue(): FileUploaderStateProto {\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        const { fileId, fileUrls } = status as UploadedStatus\n        return new UploadedFileInfoProto({\n          fileId,\n          fileUrls,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({ uploadedFileInfo })\n  }\n\n  /**\n   * Called by react-dropzone when files and drag-and-dropped onto the widget.\n   *\n   * @param acceptedFiles an array of files.\n   * @param rejectedFiles an array of FileRejections. A FileRejection\n   * encapsulates a File and an error indicating why it was rejected by\n   * the dropzone widget.\n   */\n  private dropHandler = (\n    acceptedFiles: File[],\n    rejectedFiles: FileRejection[]\n  ): void => {\n    const { element } = this.props\n    const { multipleFiles } = element\n\n    // If this is a single-file uploader and multiple files were dropped,\n    // all the files will be rejected. In this case, we pull out the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !multipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        file =>\n          file.errors.length === 1 && file.errors[0].code === \"too-many-files\"\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    this.props.uploadClient\n      .fetchFileURLs(acceptedFiles)\n      .then((fileURLsArray: IFileURLs[]) => {\n        // If this is a single-file uploader that already has an uploaded file,\n        // remove that file so that it can be replaced with our new one.\n        if (!multipleFiles && acceptedFiles.length > 0) {\n          const existingFile = this.state.files.find(\n            f => f.status.type !== \"error\"\n          )\n          if (existingFile) {\n            this.forceUpdatingStatus = true\n            this.deleteFile(existingFile.id)\n            this.forceUpdatingStatus = false\n          }\n        }\n\n        zip(fileURLsArray, acceptedFiles).forEach(\n          ([fileURLs, acceptedFile]) => {\n            this.uploadFile(fileURLs as FileURLsProto, acceptedFile as File)\n          }\n        )\n      })\n      .catch((errorMessage: string) => {\n        this.addFiles(\n          acceptedFiles.map(f => {\n            return new UploadFileInfo(f.name, f.size, this.nextLocalFileId(), {\n              type: \"error\",\n              errorMessage,\n            })\n          })\n        )\n      })\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected =>\n        getRejectedFileInfo(\n          rejected,\n          this.nextLocalFileId(),\n          this.maxUploadSizeInBytes\n        )\n      )\n      this.addFiles(rejectedInfos)\n    }\n  }\n\n  public uploadFile = (fileURLs: IFileURLs, file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        fileURLs.uploadUrl as string,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(() => this.onUploadComplete(uploadingFileInfo.id, fileURLs))\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    fileUrls: IFileURLs\n  ): void => {\n    const curFile = this.getFile(localFileId)\n    if (isNullOrUndefined(curFile) || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({\n        type: \"uploaded\",\n        fileId: fileUrls.fileId as string,\n        fileUrls,\n      })\n    )\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (isNullOrUndefined(file)) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    if (file.status.type === \"uploaded\" && file.status.fileUrls.deleteUrl) {\n      this.props.uploadClient.deleteFile(file.status.fileUrls.deleteUrl)\n    }\n\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({ files: [...state.files, file] }))\n    })\n  }\n\n  /** Append the given files to `state.files`. */\n  private addFiles = (files: UploadFileInfo[]): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({ files: [...state.files, ...files] }))\n    })\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(state => ({\n        files: state.files.filter(file => file.id !== idToRemove),\n      }))\n    })\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState(curState => {\n        return {\n          files: curState.files.map(file =>\n            file.id === curFileId ? newFile : file\n          ),\n        }\n      })\n    })\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (isNullOrUndefined(file) || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    /* eslint-disable-next-line @eslint-react/dom/no-flush-sync --\n     * Using flushSync here because we need the state to be immediately updated\n     * before any subsequent file upload operations occur.\n     */\n    flushSync(() => {\n      this.setState({ files: [] }, () => {\n        const newWidgetValue = this.createWidgetValue()\n        if (isNullOrUndefined(newWidgetValue)) {\n          return\n        }\n\n        const { widgetMgr, element, fragmentId } = this.props\n        widgetMgr.setFileUploaderStateValue(\n          element,\n          newWidgetValue,\n          { fromUi: true },\n          fragmentId\n        )\n      })\n    })\n  }\n\n  public override render(): React.ReactNode {\n    const { files } = this.state\n    const { element, disabled, widgetMgr, width } = this.props\n    const acceptedExtensions = element.type\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // We display files in the reverse order they were added.\n    // This way, if you have multiple pages of uploaded files and then drop\n    // another one, you'll see that newest file at the top of the first page.\n    const newestToOldestFiles = files.slice().reverse()\n\n    return (\n      <StyledFileUploader\n        className=\"stFileUploader\"\n        data-testid=\"stFileUploader\"\n        width={width}\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <FileDropzone\n          onDrop={this.dropHandler}\n          multiple={element.multipleFiles}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={this.maxUploadSizeInBytes}\n          label={element.label}\n          disabled={disabled}\n        />\n        {newestToOldestFiles.length > 0 && (\n          <UploadedFiles\n            items={newestToOldestFiles}\n            pageSize={3}\n            onDelete={this.deleteFile}\n            resetOnAdd\n          />\n        )}\n      </StyledFileUploader>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n}\n\nconst FileUploaderWithCalculatedWidth = withCalculatedWidth(memo(FileUploader))\nexport default FileUploaderWithCalculatedWidth\n"],"names":["CloudUpload","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","Error","StyledFileDropzoneSection","target","isDisabled","theme","display","alignItems","padding","spacing","lg","backgroundColor","colors","secondaryBg","borderRadius","radii","default","border","widgetBorderColor","sizes","borderWidth","undefined","outline","boxShadow","primary","color","gray","bodyText","StyledFileDropzoneInstructions","name","styles","StyledFileDropzoneInstructionsFileUploaderIcon","darkenedBgMix100","marginRight","StyledFileDropzoneInstructionsStyledSpan","marginBottom","twoXS","StyledFileDropzoneInstructionsColumn","StyledUploadedFiles","left","right","lineHeight","lineHeights","tight","paddingTop","md","paddingLeft","paddingRight","StyledUploadedFilesList","listStyleType","margin","none","StyledUploadedFilesListItem","StyledUploadedFileData","flex","overflow","StyledUploadedFileName","sm","textOverflow","whiteSpace","StyledUploadedFile","StyledErrorMessage","StyledFileIcon","StyledFileError","red","fontSize","fontSizes","height","StyledFileErrorIcon","compactFileUploader","flexDirection","maxWidth","width","full","StyledFileUploader","convertRemToPx","Small","kind","danger","fadedText60","Kind","FileDropzoneInstructions","multiple","acceptedExtensions","maxSizeBytes","jsxs","jsx","Icon","getSizeDisplay","FileSize","Byte","length","map","ext","replace","toUpperCase","join","memo","FileDropzone","onDrop","disabled","label","Dropzone","getAccept","getRootProps","getInputProps","BaseButton","BaseButtonKind","SECONDARY","BaseButtonSize","SMALL","StyledPagination","justifyContent","paddingBottom","StyledPaginators","fadedText40","Pagination","currentPage","totalPages","onNext","onPrevious","MINIMAL","ChevronLeft","ChevronRight","calculateNumPages","items","pageSize","Math","ceil","withPagination","WrappedComponent","hoistNonReactStatics","WithPagination","resetOnAdd","updateCurrentPage","useState","updateTotalPages","prevItems","usePrevious","useEffect","min","max","paginatedItems","slice","Fragment","UploadedFileStatus","fileInfo","status","type","ProgressBar","progress","Size","errorMessage","size","UploadedFile","onDelete","InsertDriveFile","id","Clear","UploadedFileList","file","PaginatedFiles","UploadedFiles","FileUploader","React","PureComponent","constructor","formClearHelper","FormClearHelper","localFileIdCounter","forceUpdatingStatus","componentDidUpdate","newWidgetValue","createWidgetValue","element","widgetMgr","fragmentId","prevWidgetValue","getFileUploaderStateValue","isEqual","setFileUploaderStateValue","fromUi","dropHandler","acceptedFiles","rejectedFiles","multipleFiles","firstFileIndex","findIndex","errors","code","push","splice","uploadClient","fetchFileURLs","then","fileURLsArray","existingFile","state","files","find","f","deleteFile","forEach","fileURLs","acceptedFile","uploadFile","catch","addFiles","UploadFileInfo","nextLocalFileId","rejectedInfos","rejected","getRejectedFileInfo","maxUploadSizeInBytes","cancelToken","axios","CancelToken","source","uploadingFileInfo","addFile","uploadUrl","e","onUploadProgress","token","onUploadComplete","err","isCancel","updateFile","setStatus","toString","localFileId","fileUrls","curFile","getFile","isNullOrUndefined","fileId","cancel","deleteUrl","removeFile","flushSync","setState","idToRemove","filter","curFileId","newFile","curState","event","newProgress","round","loaded","total","onFormCleared","initialValue","emptyState","widgetValue","uploadedFileInfo","componentWillUnmount","disconnect","maxMbs","maxUploadSizeMb","sizeConverter","Megabyte","isFileUpdating","some","componentDidMount","UploadedFileInfoProto","FileUploaderStateProto","render","manageFormClearListener","formId","newestToOldestFiles","reverse","WidgetLabel","labelVisibilityProtoValueToEnum","labelVisibility","value","help","StyledWidgetLabelHelp","TooltipIcon","Placement","TOP_RIGHT","FileUploaderWithCalculatedWidth","withCalculatedWidth"],"mappings":";;;;;;;AAGO,IAAIA,IAA2BC,gBAAAA,EAAgB,WAAC,SAAUC,GAAOC,GAAK;AAC3E,MAAIC,IAAQ;AAAA,IACV,MAAQ;AAAA,IACR,OAAS;AAAA,EACV;AACD,SAAoBC,gBAAAA,EAAmB,cAACC,GAAiBC,EAAS;AAAA,IAChE,WAAWH;AAAA,IACX,mBAAmB;AAAA,IACnB,aAAa;AAAA,EACd,GAAEF,GAAO;AAAA,IACR,KAAKC;AAAA,EACT,CAAG,GAAgBE,gBAAAA,EAAmB,cAAC,QAAQ;AAAA,IAC3C,MAAM;AAAA,IACN,GAAG;AAAA,EACP,CAAG,GAAgBA,gBAAAA,EAAmB,cAAC,QAAQ;AAAA,IAC3C,GAAG;AAAA,EACP,CAAG,CAAC;AACJ,CAAC;AACDL,EAAY,cAAc;AClBnB,IAAIQ,IAAqBP,gBAAAA,EAAgB,WAAC,SAAUC,GAAOC,GAAK;AACrE,MAAIC,IAAQ;AAAA,IACV,MAAQ;AAAA,IACR,OAAS;AAAA,EACV;AACD,SAAoBC,gBAAAA,EAAmB,cAACC,GAAiBC,EAAS;AAAA,IAChE,WAAWH;AAAA,IACX,mBAAmB;AAAA,IACnB,aAAa;AAAA,EACd,GAAEF,GAAO;AAAA,IACR,KAAKC;AAAA,EACT,CAAG,GAAgBE,gBAAAA,EAAmB,cAAC,QAAQ;AAAA,IAC3C,GAAG;AAAA,EACP,CAAG,CAAC;AACJ,CAAC;AACDG,EAAM,cAAc;ACMPC,MAAAA,iCAA4B;AAAA,EAAAC,QAAA;AAAA,CAAA,EACvC,CAAC;AAAA,EAAEC,YAAAA;AAAAA,EAAYC,OAAAA;AAAM,OAAO;AAAA,EAC1BC,SAAS;AAAA,EACTC,YAAY;AAAA,EACZC,SAASH,EAAMI,QAAQC;AAAAA,EACvBC,iBAAiBN,EAAMO,OAAOC;AAAAA,EAC9BC,cAAcT,EAAMU,MAAMC;AAAAA,EAC1BC,QAAQZ,EAAMO,OAAOM,oBACjB,GAAGb,EAAMc,MAAMC,WAAW,UAAUf,EAAMO,OAAOM,iBAAiB,KAClEG;AAAAA,EACJ,UAAU;AAAA,IACRC,SAAS;AAAA,EACX;AAAA,EACA,kBAAkB;AAAA,IAChBC,WAAW,aAAalB,EAAMO,OAAOY,OAAO;AAAA,EAC9C;AAAA,EACAC,OAAOrB,IAAaC,EAAMO,OAAOc,OAAOrB,EAAMO,OAAOe;AACvD,MACF,GAEaC,6BAAiC;AAAA,EAAAzB,QAAA;AAAA,CAAA,EAAA;AAAA,EAAA0B,MAAA;AAAA,EAAAC,QAAA;AAAA,CAI7C,GAEYC,8BAAiD;AAAA,EAAA5B,QAAA;AAAA,CAAA,EAC5D,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACdoB,OAAOpB,EAAMO,OAAOoB;AAAAA,EACpBC,aAAa5B,EAAMI,QAAQC;AAC7B,MACF,GAEawB,+BAA2C;AAAA,EAAA/B,QAAA;AAAA,CAAA,EACtD,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACd8B,cAAc9B,EAAMI,QAAQ2B;AAC9B,MACF,GAEaC,8BAAuC;AAAA,EAAAlC,QAAA;AAAA,CAAA,EAAA;AAAA,EAAA0B,MAAA;AAAA,EAAAC,QAAA;AAAA,CAGnD,GAEYQ,6BAAsB;AAAA,EAAAnC,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC5DkC,MAAM;AAAA,EACNC,OAAO;AAAA,EACPC,YAAYpC,EAAMqC,YAAYC;AAAAA,EAC9BC,YAAYvC,EAAMI,QAAQoC;AAAAA,EAC1BC,aAAazC,EAAMI,QAAQC;AAAAA,EAC3BqC,cAAc1C,EAAMI,QAAQC;AAC9B,IAAG,EAAA,GAEUsC,6BAA0B;AAAA,EAAA7C,QAAA;AAAA,CAAA,EAAU,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC/D4C,eAAe;AAAA,EACfC,QAAQ7C,EAAMI,QAAQ0C;AAAAA,EACtB3C,SAASH,EAAMI,QAAQ0C;AACzB,IAAG,EAAA,GAEUC,4BAA8B;AAAA,EAAAjD,QAAA;AAAA,CAAA,EAAU,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACnE6C,QAAQ7C,EAAMI,QAAQ0C;AAAAA,EACtB3C,SAASH,EAAMI,QAAQ0C;AACzB,IAAG,EAAA,GAEUE,6BAAyB;AAAA,EAAAlD,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC/DC,SAAS;AAAA,EACTC,YAAY;AAAA,EACZ+C,MAAM;AAAA,EACNR,aAAazC,EAAMI,QAAQC;AAAAA,EAC3B6C,UAAU;AACZ,IAAG,EAAA,GAEUC,6BAAyB;AAAA,EAAArD,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC/D4B,aAAa5B,EAAMI,QAAQgD;AAAAA,EAC3BtB,cAAc9B,EAAMI,QAAQ2B;AAAAA,EAC5BmB,UAAU;AAAA,EACVG,cAAc;AAAA,EACdC,YAAY;AACd,IAAG,EAAA,GAEUC,6BAAqB;AAAA,EAAAzD,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC3DC,SAAS;AAAA,EACTC,YAAY;AAAA,EACZ4B,cAAc9B,EAAMI,QAAQ2B;AAC9B,IAAG,EAAA,GAEUyB,+BAAqB;AAAA,EAAA1D,QAAA;AAAA,CAAA,EAAY,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC5D4B,aAAa5B,EAAMI,QAAQ2B;AAC7B,IAAG,EAAA,GAEU0B,8BAAiB;AAAA,EAAA3D,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACvDC,SAAS;AAAA,EACTE,SAASH,EAAMI,QAAQ2B;AAAAA,EACvBX,OAAOpB,EAAMO,OAAOoB;AACtB,IAAG,EAAA,GAEU+B,+BAAkB;AAAA,EAAA5D,QAAA;AAAA,CAAA,EAAa,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EAC1DoB,OAAOpB,EAAMO,OAAOoD;AAAAA,EACpBC,UAAU5D,EAAM6D,UAAUT;AAAAA,EAC1BU,QAAQ9D,EAAM6D,UAAUT;AAAAA,EACxBhB,YAAYpC,EAAM6D,UAAUT;AAAAA,EAC5BnD,SAAS;AAAA,EACTC,YAAY;AAAA,EACZoD,YAAY;AACd,IAAG,EAAA,GAEUS,8BAAsB;AAAA,EAAAjE,QAAA;AAAA,CAAA,EAAA;AAAA,EAAA0B,MAAA;AAAA,EAAAC,QAAA;AAAA,CAAc,GAE3CuC,KAAsBA,CAAChE,OAAoC;AAAA;AAAA,EAE/D,CAACH,CAAgC,GAAG;AAAA,IAClCI,SAAS;AAAA,IACTgE,eAAe;AAAA,IACf/D,YAAY;AAAA,EACd;AAAA;AAAA,EAEA,CAACqB,CAAqC,GAAG;AAAA,IACvCO,cAAc9B,EAAMI,QAAQC;AAAAA,EAC9B;AAAA;AAAA,EAEA,CAACqB,CAAqD,GAAG;AAAA,IACvDzB,SAAS;AAAA,EACX;AAAA;AAAA,EAEA,CAACgC,CAA0B,GAAG;AAAA,IAC5BS,cAAc1C,EAAMI,QAAQC;AAAAA,EAC9B;AAAA;AAAA,EAEA,CAACkD,CAAyB,GAAG;AAAA,IAC3BW,UAAU;AAAA,IACVjB,MAAM;AAAA,IACN/C,YAAY;AAAA,IACZ4B,cAAc9B,EAAMI,QAAQgD;AAAAA,EAC9B;AAAA;AAAA,EAEA,CAACD,CAA6B,GAAG;AAAA,IAC/BgB,OAAOnE,EAAMc,MAAMsD;AAAAA,EACrB;AAAA;AAAA,EAEA,CAACpB,CAA6B,GAAG;AAAA,IAC/BiB,eAAe;AAAA,EACjB;AAAA;AAAA,EAEA,CAACP,CAAsB,GAAG;AAAA,IACxBI,QAAQ;AAAA,IACRR,YAAY;AAAA,EACd;AAAA;AAAA,EAEA,CAACS,CAA0B,GAAG;AAAA,IAC5B9D,SAAS;AAAA,EACX;AAAA;AAAA,EAEA,CAAC8C,CAAkC,GAAG;AAAA,IACpCF,QAAQ7C,EAAMI,QAAQ0C;AAAAA,IACtB3C,SAASH,EAAMI,QAAQ0C;AAAAA,EAAAA;AAE3B,IAKauB,8BAAqB;AAAA,EAAAvE,QAAA;AAAA,CAAA,EAChC,CAAC;AAAA,EAAEE,OAAAA;AAAAA,EAAOmE,OAAAA;AAAM,MAAM;AAChBA,MAAAA,IAAQG,EAAe,OAAO;AAChC,WAAON,GAAoBhE,CAAK;AAEpC,KACF,GCrKauE,+BAAQ;AAAA,EAAAzE,QAAA;AAAA,CAAA,EAAwB,CAAC;AAAA,EAAE0E,MAAAA;AAAAA,EAAMxE,OAAAA;AAAM,MAAM;AAC1D,QAAA;AAAA,IAAEyE,QAAAA;AAAAA,IAAQC,aAAAA;AAAAA,MAAgB1E,EAAMO;AAE/B,SAAA;AAAA,IACLa,OAAOoD,MAASG,WAAcF,IAASC;AAAAA,IACvCd,UAAU5D,EAAM6D,UAAUT;AAAAA,IAC1BhB,YAAYpC,EAAMqC,YAAYC;AAAAA,EAChC;AACF,GAAE,EAAA,GCGIsC,KAA2BA,CAAC;AAAA,EAChCC,UAAAA;AAAAA,EACAC,oBAAAA;AAAAA,EACAC,cAAAA;AACK,MACLC,gBAAAA,EAAA,KAACzD,GAA+B,EAAA,eAAY,sCAC1C,UAAA;AAAA,EAAA0D,gBAAAA,EAAAA,IAACvD,KACC,UAACuD,gBAAAA,EAAA,IAAAC,GAAA,EAAK,SAAS9F,GAAa,MAAK,WAAS,EAC5C,CAAA;AAAA,yBACC4C,IACC,EAAA,UAAA;AAAA,IAAAgD,gBAAAA,OAACnD,IAAwC,EAAA,UAAA;AAAA,MAAA;AAAA,MACpBgD,IAAW,MAAM;AAAA,MAAG;AAAA,IAAA,GACzC;AAAA,2BACCN,GACE,EAAA,UAAA;AAAA,MAAA,SAASY,EAAeJ,GAAcK,EAASC,MAAM,CAAC,CAAC;AAAA,MACvDP,EAAmBQ,SAChB,MAAMR,EACHS,IAAIC,OAAOA,EAAIC,QAAQ,OAAO,EAAE,EAAEC,YAAY,CAAC,EAC/CC,KAAK,IAAI,CAAC,KACb;AAAA,IAAA,EACN,CAAA;AAAA,EAAA,EACF,CAAA;AAAA,GACF,GAGaC,KAAAA,EAAAA,KAAKhB,EAAwB,GCxBtCiB,KAAeA,CAAC;AAAA,EACpBC,QAAAA;AAAAA,EACAjB,UAAAA;AAAAA,EACAC,oBAAAA;AAAAA,EACAC,cAAAA;AAAAA,EACAgB,UAAAA;AAAAA,EACAC,OAAAA;AACK,MACLf,gBAAAA,EAAA;AAAA,EAACgB;AAAA,EAAA;AAAA,IACC,QAAAH;AAAA,IACA,UAAAjB;AAAA,IACA,QAAQqB,GAAUpB,CAAkB;AAAA,IACpC,SAASC;AAAAA,IACT,UAAAgB;AAAA,IAGA,gBAAgB;AAAA,IAEf,UAAC,CAAA;AAAA,MAAEI,cAAAA;AAAAA,MAAcC,eAAAA;AAAAA,IAAc,MAC7BpB,gBAAAA,OAAAnF,GAAA,EACC,GAAIsG,EAAAA,GACJ,eAAY,0BACZ,YAAYJ,GACZ,cAAYC,GAEZ,UAAA;AAAA,MAAAf,gBAAAA,EAAA,IAAC,SACC,EAAA,eAAY,+BACRmB,GAAAA,KAAgB;AAAA,MAErBnB,gBAAAA,EAAAA,IAAAL,IAAA,EACC,UAAAC,GACA,oBAAAC,GACA,cAAAC,EAA2B,CAAA;AAAA,MAE7BE,gBAAAA,EAAAA,IAACoB,KACC,MAAMC,EAAeC,WACrB,UAAAR,GACA,MAAMS,EAAeC,OAAM,UAG7B,eAAA,CAAA;AAAA,IAAA,EACF,CAAA;AAAA,EAAA;AAEJ,GAGab,KAAAA,EAAAA,KAAKC,EAAY,GClEnBa,8BAAmB;AAAA,EAAA5G,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACzDC,SAAS;AAAA,EACTC,YAAY;AAAA,EACZyG,gBAAgB;AAAA,EAChBC,eAAe5G,EAAMI,QAAQ2B;AAAAA,EAC7BD,cAAc9B,EAAMI,QAAQ2B;AAC9B,IAAG,EAAA,GAEU8E,8BAAmB;AAAA,EAAA/G,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEE,OAAAA;AAAM,OAAO;AAAA,EACzDC,SAAS;AAAA,EACTC,YAAY;AAAA,EACZyG,gBAAgB;AAAA,EAChBvF,OAAOpB,EAAMO,OAAOuG;AACtB,IAAG,EAAA,GCGGC,KAAaA,CAAC;AAAA,EAClBC,aAAAA;AAAAA,EACAC,YAAAA;AAAAA,EACAC,QAAAA;AAAAA,EACAC,YAAAA;AACK,MAEHnC,gBAAAA,EAAA,KAAC0B,IAAiB,EAAA,eAAY,4BAC5B,UAAA;AAAA,EAAAzB,gBAAAA,MAACV,GAAO,EAAA,UAAA,gBAAgByC,CAAW,OAAOC,CAAU,IAAG;AAAA,yBACtDJ,IACC,EAAA,UAAA;AAAA,IAAA5B,gBAAAA,EAAA,IAACoB,GAAW,EAAA,SAASc,GAAY,MAAMb,EAAec,SACpD,UAACnC,gBAAAA,EAAAA,IAAAC,GAAA,EAAK,SAASmC,GAAa,MAAK,KAAI,CAAA,GACvC;AAAA,IACCpC,gBAAAA,EAAA,IAAAoB,GAAA,EAAW,SAASa,GAAQ,MAAMZ,EAAec,SAChD,UAAAnC,gBAAAA,EAAA,IAACC,GAAK,EAAA,SAASoC,GAAc,MAAK,MAAI,EACxC,CAAA;AAAA,EAAA,EACF,CAAA;AAAA,GACF,GAIW1B,KAAAA,EAAAA,KAAKmB,EAAU,GCvBxBQ,IAAoBA,CAACC,GAAcC,MACvCC,KAAKC,KAAKH,EAAMlC,SAASmC,CAAQ,GAE7BG,KAAiBA,CAErBC,MAyDOC,EAtDgBC,CAAC;AAAA,EACtBN,UAAAA;AAAAA,EACAD,OAAAA;AAAAA,EACAQ,YAAAA;AAAAA,EACA,GAAG1I;AAAAA,MACsB;AACzB,QAAM,CAAC0H,GAAaiB,CAAiB,IAAIC,EAAAA,SAAiB,CAAC,GACrD,CAACjB,GAAYkB,CAAgB,IAAID,EAAAA,SAAiB,MACtDX,EAAkBC,GAAOC,CAAQ,CACnC,GAGMW,IAAmBC,GAAYb,CAAK;AAE1Cc,EAAAA,EAAAA,UAAU,MAAM;AACd,IAAIF,KAAaA,EAAU9C,WAAWkC,EAAMlC,UACzBiC,EAAAA,EAAkBC,GAAOC,CAAQ,CAAC,GAEjDW,KAAaA,EAAU9C,SAASkC,EAAMlC,SACpC0C,KACFC,EAAkB,CAAC,IAEZjB,IAAc,KAAKC,KAC5BgB,EAAkBhB,IAAa,CAAC;AAAA,EAClC,GACC,CAACO,GAAOR,GAAaS,GAAUW,GAAWJ,GAAYf,CAAU,CAAC;AAEpE,QAAMC,IAASA,MAAY;AACzBe,IAAAA,EAAkBP,KAAKa,IAAIvB,IAAc,GAAGC,IAAa,CAAC,CAAC;AAAA,EAC7D,GAEME,IAAaA,MAAY;AAC7Bc,IAAAA,EAAkBP,KAAKc,IAAI,GAAGxB,IAAc,CAAC,CAAC;AAAA,EAChD,GAEMyB,IAAiBjB,EAAMkB,MAC3B1B,IAAcS,GACdT,IAAcS,IAAWA,CAC3B;AACA,SAEIzC,gBAAAA,EAAA,KAAA2D,YAAA,EAAA,UAAA;AAAA,IAAA1D,gBAAAA,EAAA,IAAC4C,GAAiB,EAAA,OAAOY,GAAoBnJ,GAAAA,EAAM,CAAA;AAAA,IAClDkI,EAAMlC,SAASmC,IACdxC,gBAAAA,EAAAA,IAAC8B,IACC,EAAA,UAAAU,GACA,YAAAR,GACA,aAAaD,IAAc,GAC3B,QAAAE,GACA,YAAAC,EAAuB,CAAA,IAEvB;AAAA,EAAA,GACN;AAEJ,GAC4CU,CAAgB,GC5CjDe,KAAqBA,CAAC;AAAA,EACjCC,UAAAA;AACuB,MACnBA,EAASC,OAAOC,SAAS,cACpB9D,gBAAAA,MAAC+D,MAAY,OAAOH,EAASC,OAAOG,UAAU,MAAMC,GAAKzC,OAAS,IAGvEoC,EAASC,OAAOC,SAAS,iCAExBrF,GACC,EAAA,UAAA;AAAA,EAAAuB,gBAAAA,MAACzB,IAAmB,EAAA,eAAY,kCAC7BqF,UAAAA,EAASC,OAAOK,cACnB;AAAA,EACAlE,gBAAAA,EAAAA,IAAClB,KACC,UAACkB,gBAAAA,MAAAC,GAAA,EAAK,SAAStF,GAAO,MAAK,KAAI,CAAA,EACjC,CAAA;AAAA,GACF,IAIAiJ,EAASC,OAAOC,SAAS,mCACnBxE,GAAOY,EAAAA,UAAAA,EAAe0D,EAASO,MAAMhE,EAASC,IAAI,GAAE,IAGvD,MAGHgE,KAAeA,CAAC;AAAA,EAAER,UAAAA;AAAAA,EAAUS,UAAAA;AAAgB,MAE7CtE,gBAAAA,EAAAA,KAAAzB,GAAA,EACC,WAAU,sBACV,eAAY,sBAEZ,UAAA;AAAA,EAAA0B,gBAAAA,EAAAA,IAACxB,MACC,UAACwB,gBAAAA,EAAA,IAAAC,GAAA,EAAK,SAASqE,IAAiB,MAAK,SAAO,EAC9C,CAAA;AAAA,EACAvE,gBAAAA,EAAAA,KAAChC,GAAuB,EAAA,WAAU,0BAChC,UAAA;AAAA,IAACiC,gBAAAA,EAAAA,IAAA9B,GAAA,EACC,WAAU,0BACV,eAAY,0BACZ,OAAO0F,EAASrH,MAEfqH,UAAAA,EAASrH,KACZ,CAAA;AAAA,IACAyD,gBAAAA,MAAC2D,MAAmB,UAAAC,EAAmB,CAAA;AAAA,EAAA,GACzC;AAAA,EACA5D,gBAAAA,EAAAA,IAAC,SAAI,eAAY,2BACf,gCAACoB,GACC,EAAA,SAAS,MAAMiD,EAAST,EAASW,EAAE,GACnC,MAAMlD,EAAec,SAErB,UAACnC,gBAAAA,EAAA,IAAAC,GAAA,EAAK,SAASuE,IAAO,MAAK,KAAI,CAAA,EACjC,CAAA,EACF,CAAA;AAAA,GACF,GAIW7D,KAAAA,EAAAA,KAAKyD,EAAY,GC5E1BK,KAAmBA,CAAC;AAAA,EAAElC,OAAAA;AAAAA,EAAO8B,UAAAA;AAAgB,4BAE9C3G,IACE6E,EAAAA,UAAAA,EAAMjC,IAAIoE,CAAAA,4BACR5G,GACC,EAAA,UAAAkC,gBAAAA,EAAAA,IAACoE,IAAa,EAAA,UAAUM,GAAM,UAAAL,GAAmB,EAAA,GADjBK,EAAKH,EAEvC,CACD,GACH,GAISI,KAAiBhC,GAAe8B,EAAgB,GAEvDG,KAAgBA,CAACvK,MACrB2F,gBAAAA,EAAA,IAAChD,KACC,UAACgD,gBAAAA,EAAA,IAAA2E,IAAA,EAAe,GAAItK,EAAAA,CAAM,EAC5B,CAAA,GAEasG,KAAAA,EAAAA,KAAKiE,EAAa;AC6BjC,MAAMC,WAAqBC,EAAMC,cAAiC;AAAA,EAqBzDC,YAAY3K,GAAmB;AACpC,UAAMA,CAAK,GArBI4K,KAAAA,kBAAkB,IAAIC,GAAgB,GAOvD,KAAQC,qBAAqB,GAW7B,KAAQC,sBAAsB,IAmE9B,KAAgBC,qBAAqBA,MAAY;AAG3C,UAAA,KAAKxB,WAAW;AAClB;AAGIyB,YAAAA,IAAiB,KAAKC,kBAAkB,GACxC;AAAA,QAAEC,SAAAA;AAAAA,QAASC,WAAAA;AAAAA,QAAWC,YAAAA;AAAAA,UAAe,KAAKrL,OAG1CsL,IAAkBF,EAAUG,0BAA0BJ,CAAO;AACnE,MAAKK,EAAQP,GAAgBK,CAAe,KAChCG,EAAAA,0BACRN,GACAF,GACA;AAAA,QACES,QAAQ;AAAA,SAEVL,CACF;AAAA,IAEJ,GA8CQM,KAAAA,cAAcA,CACpBC,GACAC,MACS;AACH,YAAA;AAAA,QAAEV,SAAAA;AAAAA,UAAY,KAAKnL,OACnB;AAAA,QAAE8L,eAAAA;AAAAA,MAAAA,IAAkBX;AAK1B,UACE,CAACW,KACDF,EAAc5F,WAAW,KACzB6F,EAAc7F,SAAS,GACvB;AACA,cAAM+F,IAAiBF,EAAcG,UACnC3B,CAAAA,MACEA,EAAK4B,OAAOjG,WAAW,KAAKqE,EAAK4B,OAAO,CAAC,EAAEC,SAAS,gBACxD;AAEA,QAAIH,KAAkB,MACpBH,EAAcO,KAAKN,EAAcE,CAAc,EAAE1B,IAAI,GACvC+B,EAAAA,OAAOL,GAAgB,CAAC;AAAA,MACxC;AAsCEF,UAnCJ,KAAK7L,MAAMqM,aACRC,cAAcV,CAAa,EAC3BW,KAAK,CAACC,MAA+B;AAGpC,YAAI,CAACV,KAAiBF,EAAc5F,SAAS,GAAG;AACxCyG,gBAAAA,IAAe,KAAKC,MAAMC,MAAMC,KACpCC,CAAKA,MAAAA,EAAErD,OAAOC,SAAS,OACzB;AACA,UAAIgD,MACF,KAAK1B,sBAAsB,IACtB+B,KAAAA,WAAWL,EAAavC,EAAE,GAC/B,KAAKa,sBAAsB;AAAA,QAC7B;AAGEyB,QAAAA,EAAAA,GAAeZ,CAAa,EAAEmB,QAChC,CAAC,CAACC,GAAUC,CAAY,MAAM;AACvBC,eAAAA,WAAWF,GAA2BC,CAAoB;AAAA,QAAA,CAEnE;AAAA,MAAA,CACD,EACAE,MAAM,CAACtD,MAAyB;AAC1BuD,aAAAA,SACHxB,EAAc3F,IAAI4G,CAAKA,MACd,IAAIQ,EAAeR,EAAE3K,MAAM2K,EAAE/C,MAAM,KAAKwD,mBAAmB;AAAA,UAChE7D,MAAM;AAAA,UACNI,cAAAA;AAAAA,QAAAA,CACD,CACF,CACH;AAAA,MAAA,CACD,GAICgC,EAAc7F,SAAS,GAAG;AACtBuH,cAAAA,IAAgB1B,EAAc5F,IAAIuH,CACtCC,MAAAA,GACED,GACA,KAAKF,gBAAgB,GACrB,KAAKI,oBACP,CACF;AACA,aAAKN,SAASG,CAAa;AAAA,MAAA;AAAA,IAE/B,GAEOL,KAAAA,aAAaA,CAACF,GAAqB3C,MAAqB;AAEvDsD,YAAAA,IAAcC,EAAMC,YAAYC,OAAO,GACvCC,IAAoB,IAAIV,EAC5BhD,EAAKnI,MACLmI,EAAKP,MACL,KAAKwD,mBACL;AAAA,QACE7D,MAAM;AAAA,QACNkE,aAAAA;AAAAA,QACAhE,UAAU;AAAA,MAAA,CAEd;AACA,WAAKqE,QAAQD,CAAiB,GAE9B,KAAK/N,MAAMqM,aACRa,WACC,KAAKlN,MAAMmL,SACX6B,EAASiB,WACT5D,GACA6D,CAAAA,MAAK,KAAKC,iBAAiBD,GAAGH,EAAkB7D,EAAE,GAClDyD,EAAYS,KACd,EACC7B,KAAK,MAAM,KAAK8B,iBAAiBN,EAAkB7D,IAAI8C,CAAQ,CAAC,EAChEG,MAAMmB,CAAOA,MAAA;AAGZ,QAAKV,EAAMW,SAASD,CAAG,KACrB,KAAKE,WACHT,EAAkB7D,IAClB6D,EAAkBU,UAAU;AAAA,UAC1BhF,MAAM;AAAA,UACNI,cAAcyE,IAAMA,EAAII,aAAa;AAAA,QAAA,CACtC,CACH;AAAA,MACF,CACD;AAAA,IACL,GAMQL,KAAAA,mBAAmBA,CACzBM,GACAC,MACS;AACHC,YAAAA,IAAU,KAAKC,QAAQH,CAAW;AACxC,MAAII,EAAkBF,CAAO,KAAKA,EAAQrF,OAAOC,SAAS,eAM1D,KAAK+E,WACHK,EAAQ3E,IACR2E,EAAQJ,UAAU;AAAA,QAChBhF,MAAM;AAAA,QACNuF,QAAQJ,EAASI;AAAAA,QACjBJ,UAAAA;AAAAA,MAAAA,CACD,CACH;AAAA,IACF,GASO9B,KAAAA,aAAaA,CAACkC,MAAyB;AACtC3E,YAAAA,IAAO,KAAKyE,QAAQE,CAAM;AAC5BD,MAAAA,EAAkB1E,CAAI,MAItBA,EAAKb,OAAOC,SAAS,eAIlBD,EAAAA,OAAOmE,YAAYsB,OAAO,GAG7B5E,EAAKb,OAAOC,SAAS,cAAcY,EAAKb,OAAOoF,SAASM,aAC1D,KAAKlP,MAAMqM,aAAaS,WAAWzC,EAAKb,OAAOoF,SAASM,SAAS,GAGnE,KAAKC,WAAWH,CAAM;AAAA,IACxB,GAGQhB,KAAAA,UAAUA,CAAC3D,MAA+B;AAKhD+E,MAAAA,EAAAA,UAAU,MAAM;AACd,aAAKC,SAAS3C,CAAUA,OAAA;AAAA,UAAEC,OAAO,CAAC,GAAGD,EAAMC,OAAOtC,CAAI;AAAA,QAAA,EAAI;AAAA,MAAA,CAC3D;AAAA,IACH,GAGQ+C,KAAAA,WAAWA,CAACT,MAAkC;AAKpDyC,MAAAA,EAAAA,UAAU,MAAM;AACd,aAAKC,SAAS3C,CAAUA,OAAA;AAAA,UAAEC,OAAO,CAAC,GAAGD,EAAMC,OAAO,GAAGA,CAAK;AAAA,QAAA,EAAI;AAAA,MAAA,CAC/D;AAAA,IACH,GAGQwC,KAAAA,aAAaA,CAACG,MAA6B;AAKjDF,MAAAA,EAAAA,UAAU,MAAM;AACd,aAAKC,SAAS3C,CAAUA,OAAA;AAAA,UACtBC,OAAOD,EAAMC,MAAM4C,OAAOlF,CAAQA,MAAAA,EAAKH,OAAOoF,CAAU;AAAA,QAAA,EACxD;AAAA,MAAA,CACH;AAAA,IACH,GAKQR,KAAAA,UAAUA,CAACE,MACV,KAAKtC,MAAMC,MAAMC,KAAKvC,CAAQA,MAAAA,EAAKH,OAAO8E,CAAM,GAIjDR,KAAAA,aAAaA,CAACgB,GAAmBC,MAAkC;AAKzEL,MAAAA,EAAAA,UAAU,MAAM;AACd,aAAKC,SAASK,CAAYA,OACjB;AAAA,UACL/C,OAAO+C,EAAS/C,MAAM1G,IAAIoE,OACxBA,EAAKH,OAAOsF,IAAYC,IAAUpF,CACpC;AAAA,QACF,EACD;AAAA,MAAA,CACF;AAAA,IACH,GAMQ8D,KAAAA,mBAAmBA,CAACwB,GAAsBX,MAAyB;AACnE3E,YAAAA,IAAO,KAAKyE,QAAQE,CAAM;AAChC,UAAID,EAAkB1E,CAAI,KAAKA,EAAKb,OAAOC,SAAS;AAClD;AAGF,YAAMmG,IAAcxH,KAAKyH,MAAOF,EAAMG,SAAS,MAAOH,EAAMI,KAAK;AAC7D1F,MAAAA,EAAKb,OAAOG,aAAaiG,KAKxBpB,KAAAA,WACHQ,GACA3E,EAAKoE,UAAU;AAAA,QACbhF,MAAM;AAAA,QACNkE,aAAatD,EAAKb,OAAOmE;AAAAA,QACzBhE,UAAUiG;AAAAA,MAAAA,CACX,CACH;AAAA,IACF,GAMA,KAAQI,gBAAgBA,MAAY;AAKlCZ,MAAAA,EAAAA,UAAU,MAAM;AACd,aAAKC,SAAS;AAAA,UAAE1C,OAAO,CAAA;AAAA,QAAA,GAAM,MAAM;AAC3B1B,gBAAAA,IAAiB,KAAKC,kBAAkB;AAC1C6D,cAAAA,EAAkB9D,CAAc;AAClC;AAGI,gBAAA;AAAA,YAAEG,WAAAA;AAAAA,YAAWD,SAAAA;AAAAA,YAASE,YAAAA;AAAAA,cAAe,KAAKrL;AACtCyL,UAAAA,EAAAA,0BACRN,GACAF,GACA;AAAA,YAAES,QAAQ;AAAA,aACVL,CACF;AAAA,QAAA,CACD;AAAA,MAAA,CACF;AAAA,IACH,GArZE,KAAKqB,QAAQ,KAAKuD;AAAAA,EAAAA;AAAAA,EAGpB,IAAIA,eAAsB;AACxB,UAAMC,IAAa;AAAA,MAAEvD,OAAO,CAAA;AAAA,IAAG,GACzB;AAAA,MAAEvB,WAAAA;AAAAA,MAAWD,SAAAA;AAAAA,QAAY,KAAKnL,OAE9BmQ,IAAc/E,EAAUG,0BAA0BJ,CAAO;AAC3D4D,QAAAA,EAAkBoB,CAAW;AACxBD,aAAAA;AAGH,UAAA;AAAA,MAAEE,kBAAAA;AAAAA,IAAAA,IAAqBD;AAC7B,WAAIpB,EAAkBqB,CAAgB,KAAKA,EAAiBpK,WAAW,IAC9DkK,IAGF;AAAA,MACLvD,OAAOyD,EAAiBnK,IAAI4G,CAAKA,MAAA;AAC/B,cAAM3K,IAAO2K,EAAE3K,MACT4H,IAAO+C,EAAE/C,MAETkF,IAASnC,EAAEmC,QACXJ,IAAW/B,EAAE+B;AAEnB,eAAO,IAAIvB,EAAenL,GAAM4H,GAAM,KAAKwD,mBAAmB;AAAA,UAC5D7D,MAAM;AAAA,UACNuF,QAAAA;AAAAA,UACAJ,UAAAA;AAAAA,QAAAA,CACD;AAAA,MACF,CAAA;AAAA,IACH;AAAA,EAAA;AAAA,EAGcyB,uBAA6B;AAC3C,SAAKzF,gBAAgB0F,WAAW;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,IAAY5C,uBAA+B;AACnC6C,UAAAA,IAAS,KAAKvQ,MAAMmL,QAAQqF;AAClC,WAAOC,GAAcF,GAAQzK,EAAS4K,UAAU5K,EAASC,IAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/D,IAAWyD,SAA6B;AACtC,UAAMmH,IAAiBA,CAACtG,MACtBA,EAAKb,OAAOC,SAAS;AAIvB,WAAI,KAAKiD,MAAMC,MAAMiE,KAAKD,CAAc,KAAK,KAAK5F,sBACzC,aAGF;AAAA,EAAA;AAAA,EA2BO8F,oBAA0B;AAClC5F,UAAAA,IAAiB,KAAKC,kBAAkB,GACxC;AAAA,MAAEC,SAAAA;AAAAA,MAASC,WAAAA;AAAAA,MAAWC,YAAAA;AAAAA,QAAe,KAAKrL;AAKhD,IADwBoL,EAAUG,0BAA0BJ,CAAO,MAC3CzJ,UACZ+J,EAAAA,0BACRN,GACAF,GACA;AAAA,MACES,QAAQ;AAAA,OAEVL,CACF;AAAA,EACF;AAAA,EAGMH,oBAA4C;AAClD,UAAMkF,IAA4C,KAAK1D,MAAMC,MAC1D4C,OAAO1C,CAAAA,MAAKA,EAAErD,OAAOC,SAAS,UAAU,EACxCxD,IAAI4G,CAAKA,MAAA;AACF,YAAA;AAAA,QAAE3K,MAAAA;AAAAA,QAAM4H,MAAAA;AAAAA,QAAMN,QAAAA;AAAAA,MAAAA,IAAWqD,GACzB;AAAA,QAAEmC,QAAAA;AAAAA,QAAQJ,UAAAA;AAAAA,MAAAA,IAAapF;AAC7B,aAAO,IAAIsH,EAAsB;AAAA,QAC/B9B,QAAAA;AAAAA,QACAJ,UAAAA;AAAAA,QACA1M,MAAAA;AAAAA,QACA4H,MAAAA;AAAAA,MAAAA,CACD;AAAA,IAAA,CACF;AAEH,WAAO,IAAIiH,EAAuB;AAAA,MAAEX,kBAAAA;AAAAA,IAAAA,CAAkB;AAAA,EAAA;AAAA,EA+RxCY,SAA0B;;AAClC,UAAA;AAAA,MAAErE,OAAAA;AAAAA,QAAU,KAAKD,OACjB;AAAA,MAAEvB,SAAAA;AAAAA,MAAS1E,UAAAA;AAAAA,MAAU2E,WAAAA;AAAAA,MAAWvG,OAAAA;AAAAA,QAAU,KAAK7E,OAC/CwF,IAAqB2F,EAAQ1B;AAGnC,SAAKmB,gBAAgBqG,wBACnB7F,GACAD,EAAQ+F,QACR,KAAKlB,aACP;AAKA,UAAMmB,IAAsBxE,EAAMvD,MAAM,EAAEgI,QAAQ;AAElD,kCACGrM,IACC,EAAA,WAAU,kBACV,eAAY,kBACZ,OAAAF,GAEA,UAAA;AAAA,MAACc,gBAAAA,EAAAA,IAAA0L,GAAA,EACC,OAAOlG,EAAQzE,OACf,UAAAD,GACA,iBAAiB6K,IACfnG,IAAAA,EAAQoG,oBAARpG,gBAAAA,EAAyBqG,KAC3B,GAECrG,UAAAA,EAAQsG,QACN9L,gBAAAA,EAAA,IAAA+L,IAAA,EACC,UAAC/L,gBAAAA,EAAAA,IAAAgM,IAAA,EACC,SAASxG,EAAQsG,MACjB,WAAWG,GAAUC,UAAU,CAAA,EAAA,CAEnC,EAEJ,CAAA;AAAA,MACClM,gBAAAA,EAAA,IAAAY,IAAA,EACC,QAAQ,KAAKoF,aACb,UAAUR,EAAQW,eAClB,oBAAAtG,GACA,cAAc,KAAKkI,sBACnB,OAAOvC,EAAQzE,OACf,UAAAD,GAAmB;AAAA,MAEpB0K,EAAoBnL,SAAS,KAC5BL,gBAAAA,EAAA,IAAC4E,IACC,EAAA,OAAO4G,GACP,UAAU,GACV,UAAU,KAAKrE,YACf,YAAU,GAEb,CAAA;AAAA,IAAA,GACH;AAAA,EAAA;AAAA,EAIIQ,kBAA0B;AAChC,WAAO,KAAKxC;AAAAA,EAAAA;AAEhB;AAEA,MAAMgH,KAAkCC,EAAoBzL,EAAKkE,KAAAA,EAAY,CAAC;","x_google_ignoreList":[0,1]}