{"version":3,"file":"index-DAlYtLim.js","sources":["../../../streamlit/frontend/lib/src/components/widgets/Multiselect/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/Multiselect/Multiselect.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledUISelect = styled.div(({ theme }) => ({\n  \"span[aria-disabled='true']\": {\n    background: theme.colors.fadedText05,\n  },\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback, useMemo } from \"react\"\n\nimport { ChevronDown } from \"baseui/icon\"\nimport {\n  OnChangeParams,\n  Option,\n  TYPE,\n  Select as UISelect,\n} from \"baseui/select\"\nimport without from \"lodash/without\"\nimport { isMobile } from \"react-device-detect\"\nimport { useTheme } from \"@emotion/react\"\n\nimport { MultiSelect as MultiSelectProto } from \"@streamlit/protobuf\"\n\nimport { VirtualDropdown } from \"~lib/components/shared/Dropdown\"\nimport { fuzzyFilterSelectOptions } from \"~lib/components/shared/Dropdown/Selectbox\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"~lib/components/widgets/BaseWidget\"\nimport { StyledUISelect } from \"~lib/components/widgets/Multiselect/styled-components\"\nimport { EmotionTheme } from \"~lib/theme\"\nimport { labelVisibilityProtoValueToEnum } from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"~lib/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: MultiSelectProto\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n}\n\ntype MultiselectValue = number[]\n\ninterface MultiselectOption {\n  label: string\n  value: string\n}\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: MultiSelectProto\n): MultiselectValue | undefined => {\n  return widgetMgr.getIntArrayValue(element)\n}\n\nconst getDefaultStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.default ?? null\n}\n\nconst getCurrStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.value ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: MultiSelectProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<MultiselectValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setIntArrayValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Multiselect: FC<Props> = props => {\n  const { element, widgetMgr, fragmentId } = props\n\n  const theme: EmotionTheme = useTheme()\n  const [value, setValueWithSource] = useBasicWidgetState<\n    MultiselectValue,\n    MultiSelectProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const overMaxSelections =\n    element.maxSelections > 0 && value.length >= element.maxSelections\n\n  const getNoResultsMsg = useMemo(() => {\n    if (element.maxSelections === 0) {\n      return \"No results\"\n    } else if (value.length === element.maxSelections) {\n      const option = element.maxSelections !== 1 ? \"options\" : \"option\"\n      return `You can only select up to ${element.maxSelections} ${option}. Remove an option first.`\n    }\n    return \"No results\"\n  }, [element.maxSelections, value.length])\n\n  const valueFromState = useMemo(() => {\n    return value.map(i => {\n      const label = element.options[i]\n      return { value: i.toString(), label }\n    })\n  }, [element.options, value])\n\n  const generateNewState = useCallback(\n    (data: OnChangeParams): MultiselectValue => {\n      const getIndex = (): number => {\n        const valueId = data.option?.value\n        return parseInt(valueId, 10)\n      }\n\n      switch (data.type) {\n        case \"remove\": {\n          return without(value, getIndex())\n        }\n        case \"clear\": {\n          return []\n        }\n        case \"select\": {\n          return value.concat([getIndex()])\n        }\n        default: {\n          throw new Error(`State transition is unknown: ${data.type}`)\n        }\n      }\n    },\n    [value]\n  )\n\n  const onChange = useCallback(\n    (params: OnChangeParams) => {\n      if (\n        element.maxSelections &&\n        params.type === \"select\" &&\n        value.length >= element.maxSelections\n      ) {\n        return\n      }\n      setValueWithSource({\n        value: generateNewState(params),\n        fromUi: true,\n      })\n    },\n    [element.maxSelections, generateNewState, setValueWithSource, value.length]\n  )\n\n  const filterOptions = useCallback(\n    (options: readonly Option[], filterValue: string): readonly Option[] => {\n      if (overMaxSelections) {\n        return []\n      }\n      // We need to manually filter for previously selected options here\n      const unselectedOptions = options.filter(\n        option => !value.includes(Number(option.value))\n      )\n\n      return fuzzyFilterSelectOptions(\n        unselectedOptions as MultiselectOption[],\n        filterValue\n      )\n    },\n    [overMaxSelections, value]\n  )\n\n  const { options } = element\n  const disabled = options.length === 0 ? true : props.disabled\n  const placeholder =\n    options.length === 0 ? \"No options to select.\" : element.placeholder\n  const selectOptions: MultiselectOption[] = options.map(\n    (option: string, idx: number) => {\n      return {\n        label: option,\n        value: idx.toString(),\n      }\n    }\n  )\n\n  // Check if we have more than 10 options in the selectbox.\n  // If that's true, we show the keyboard on mobile. If not, we hide it.\n  const showKeyboardOnMobile = options.length > 10\n\n  return (\n    <div className=\"stMultiSelect\" data-testid=\"stMultiSelect\">\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledUISelect>\n        <UISelect\n          options={selectOptions}\n          labelKey=\"label\"\n          valueKey=\"value\"\n          aria-label={element.label}\n          placeholder={placeholder}\n          type={TYPE.select}\n          multi\n          onChange={onChange}\n          value={valueFromState}\n          disabled={disabled}\n          size={\"compact\"}\n          noResultsMsg={getNoResultsMsg}\n          filterOptions={filterOptions}\n          closeOnSelect={false}\n          overrides={{\n            Popover: {\n              props: {\n                overrides: {\n                  Body: {\n                    style: () => ({\n                      marginTop: theme.spacing.px,\n                    }),\n                  },\n                },\n              },\n            },\n            SelectArrow: {\n              component: ChevronDown,\n              props: {\n                overrides: {\n                  Svg: {\n                    style: () => ({\n                      width: theme.iconSizes.xl,\n                      height: theme.iconSizes.xl,\n                    }),\n                  },\n                },\n              },\n            },\n\n            IconsContainer: {\n              style: () => ({\n                paddingRight: theme.spacing.sm,\n              }),\n            },\n            ControlContainer: {\n              style: {\n                minHeight: theme.sizes.minElementHeight,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n            Placeholder: {\n              style: () => ({\n                flex: \"inherit\",\n                opacity: \"0.7\",\n              }),\n            },\n            ValueContainer: {\n              style: () => ({\n                paddingLeft: theme.spacing.sm,\n                paddingTop: theme.spacing.none,\n                paddingBottom: theme.spacing.none,\n                paddingRight: theme.spacing.none,\n              }),\n            },\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // setting this width and height makes the clear-icon align with dropdown arrows of other input fields\n                      padding: theme.spacing.threeXS,\n                      height: theme.sizes.clearIconSize,\n                      width: theme.sizes.clearIconSize,\n                      cursor: \"pointer\",\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            SearchIcon: {\n              style: {\n                color: theme.colors.darkGray,\n              },\n            },\n            Tag: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      borderTopLeftRadius: theme.radii.md,\n                      borderTopRightRadius: theme.radii.md,\n                      borderBottomRightRadius: theme.radii.md,\n                      borderBottomLeftRadius: theme.radii.md,\n                      fontSize: theme.fontSizes.md,\n                      paddingLeft: theme.spacing.sm,\n                      marginLeft: theme.spacing.none,\n                      marginRight: theme.spacing.sm,\n                      // The tag height is derived from the minElementHeight\n                      // minus a top and bottom padding (2 * spacing.xs)\n                      // to nicely fit into the input field.\n                      height: `calc(${theme.sizes.minElementHeight} - 2 * ${theme.spacing.xs})`,\n                      maxWidth: `calc(100% - ${theme.spacing.lg})`,\n                      // Using !important because the alternative would be\n                      // uglier: we'd have to put it under a selector like\n                      // \"&[role=\"button\"]:not(:disabled)\" in order to win in\n                      // the order of the precendence.\n                      cursor: \"default !important\",\n                    },\n                  },\n                  Action: {\n                    style: {\n                      paddingLeft: 0,\n                    },\n                  },\n                  ActionIcon: {\n                    props: {\n                      overrides: {\n                        Svg: {\n                          style: {\n                            // The action icon should be around 0.625% of the parent font size.\n                            width: \"0.625em\",\n                            height: \"0.625em\",\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            MultiValue: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      fontSize: theme.fontSizes.sm,\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                // Change the 'readonly' prop to hide the mobile keyboard if options < 10\n                readOnly:\n                  isMobile && showKeyboardOnMobile === false\n                    ? \"readonly\"\n                    : null,\n              },\n            },\n            Dropdown: { component: VirtualDropdown },\n          }}\n        />\n      </StyledUISelect>\n    </div>\n  )\n}\n\nexport default memo(Multiselect)\n"],"names":["StyledUISelect","target","theme","background","colors","fadedText05","getStateFromWidgetMgr","widgetMgr","element","getIntArrayValue","getDefaultStateFromProto","default","getCurrStateFromProto","value","updateWidgetMgrState","valueWithSource","fragmentId","setIntArrayValue","fromUi","Multiselect","props","useTheme","setValueWithSource","useBasicWidgetState","overMaxSelections","maxSelections","length","getNoResultsMsg","useMemo","option","valueFromState","map","i","label","options","toString","generateNewState","useCallback","data","getIndex","valueId","parseInt","type","without","concat","Error","onChange","params","filterOptions","filterValue","unselectedOptions","filter","includes","Number","fuzzyFilterSelectOptions","disabled","placeholder","selectOptions","idx","showKeyboardOnMobile","jsxs","jsx","WidgetLabel","labelVisibilityProtoValueToEnum","labelVisibility","help","StyledWidgetLabelHelp","TooltipIcon","Placement","TOP_RIGHT","UISelect","TYPE","select","Popover","overrides","Body","style","marginTop","spacing","px","SelectArrow","component","ChevronDown","Svg","width","iconSizes","xl","height","IconsContainer","paddingRight","sm","ControlContainer","minHeight","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Placeholder","flex","opacity","ValueContainer","paddingLeft","paddingTop","none","paddingBottom","ClearIcon","color","darkGray","padding","threeXS","clearIconSize","cursor","fill","bodyText","SearchIcon","Tag","Root","borderTopLeftRadius","radii","md","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","fontSize","fontSizes","marginLeft","marginRight","xs","maxWidth","lg","Action","ActionIcon","MultiValue","Input","readOnly","isMobile","Dropdown","VirtualDropdown","memo"],"mappings":"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"}