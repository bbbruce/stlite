{"version":3,"file":"index-B2SfNCJH.js","sources":["../../../streamlit/frontend/lib/src/components/widgets/Multiselect/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/Multiselect/Multiselect.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledUISelect = styled.div(({ theme }) => ({\n  \"span[aria-disabled='true']\": {\n    background: theme.colors.fadedText05,\n  },\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2025)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback, useMemo } from \"react\"\n\nimport { ChevronDown } from \"baseui/icon\"\nimport {\n  OnChangeParams,\n  Option,\n  TYPE,\n  Select as UISelect,\n} from \"baseui/select\"\nimport without from \"lodash/without\"\nimport { isMobile } from \"react-device-detect\"\nimport { useTheme } from \"@emotion/react\"\n\nimport { MultiSelect as MultiSelectProto } from \"@streamlit/protobuf\"\n\nimport { VirtualDropdown } from \"~lib/components/shared/Dropdown\"\nimport { fuzzyFilterSelectOptions } from \"~lib/components/shared/Dropdown/Selectbox\"\nimport { Placement } from \"~lib/components/shared/Tooltip\"\nimport TooltipIcon from \"~lib/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"~lib/components/widgets/BaseWidget\"\nimport { StyledUISelect } from \"~lib/components/widgets/Multiselect/styled-components\"\nimport { EmotionTheme } from \"~lib/theme\"\nimport { labelVisibilityProtoValueToEnum } from \"~lib/util/utils\"\nimport { WidgetStateManager } from \"~lib/WidgetStateManager\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"~lib/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: MultiSelectProto\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n}\n\ntype MultiselectValue = string[]\n\ninterface MultiselectOption {\n  label: string\n  value: string\n}\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: MultiSelectProto\n): MultiselectValue | undefined => {\n  return widgetMgr.getStringArrayValue(element)\n}\n\nconst getDefaultStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.default.map(i => element.options[i]) ?? null\n}\n\nconst getCurrStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.rawValues ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: MultiSelectProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<MultiselectValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setStringArrayValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Multiselect: FC<Props> = props => {\n  const { element, widgetMgr, fragmentId } = props\n\n  const theme: EmotionTheme = useTheme()\n  const [value, setValueWithSource] = useBasicWidgetState<\n    MultiselectValue,\n    MultiSelectProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const overMaxSelections =\n    element.maxSelections > 0 && value.length >= element.maxSelections\n\n  const getNoResultsMsg = useMemo(() => {\n    if (element.maxSelections === 0) {\n      return \"No results\"\n    } else if (value.length === element.maxSelections) {\n      const option = element.maxSelections !== 1 ? \"options\" : \"option\"\n      return `You can only select up to ${element.maxSelections} ${option}. Remove an option first.`\n    }\n    return \"No results\"\n  }, [element.maxSelections, value.length])\n\n  const valueFromState = useMemo(() => {\n    return value.map(option => {\n      return { value: option, label: option }\n    })\n  }, [value])\n\n  const generateNewState = useCallback(\n    (data: OnChangeParams): MultiselectValue => {\n      switch (data.type) {\n        case \"remove\": {\n          return without(value, data.option?.value)\n        }\n        case \"clear\": {\n          return []\n        }\n        case \"select\": {\n          return value.concat([data.option?.value])\n        }\n        default: {\n          throw new Error(`State transition is unknown: ${data.type}`)\n        }\n      }\n    },\n    [value]\n  )\n\n  /**\n   * This is the onChange handler for the baseweb Select component.\n   * It is called whenever the user selects an option or removes an option.\n   * When the user starts to modify an option by typing in the input field and\n   * pressing backspace, a single `type=\"remove\"` event is fired with the value set\n   * to the option that is being removed. The same type of event is fired when the\n   * user removes an option by clicking the X icon.\n   *\n   * If we wanted to prevent an immediate rerun when starting to delete characters,\n   * we would need to introduce two new states, e.g. `localValue` and `aboutToDelete`,\n   * and commit that state to the backend upon an onBlur event.\n   * To keep it simple, we just accept the rerun happening for now.\n   */\n  const onChange = useCallback(\n    (params: OnChangeParams) => {\n      if (\n        element.maxSelections &&\n        params.type === \"select\" &&\n        value.length >= element.maxSelections\n      ) {\n        return\n      }\n      setValueWithSource({\n        value: generateNewState(params),\n        fromUi: true,\n      })\n    },\n    [element.maxSelections, generateNewState, setValueWithSource, value.length]\n  )\n\n  const filterOptions = useCallback(\n    (options: readonly Option[], filterValue: string): readonly Option[] => {\n      if (overMaxSelections) {\n        return []\n      }\n      // We need to manually filter for previously selected options here\n      const unselectedOptions = options.filter(\n        option => !value.includes(option.value)\n      )\n\n      return fuzzyFilterSelectOptions(\n        unselectedOptions as MultiselectOption[],\n        filterValue\n      )\n    },\n    [overMaxSelections, value]\n  )\n\n  const { options } = element\n  let disabled = props.disabled\n  let placeholder = element.placeholder\n  if (options.length === 0) {\n    if (!element.acceptNewOptions) {\n      placeholder = \"No options to select\"\n      // When a user cannot add new options and there are no options to select from, we disable the selectbox\n      disabled = true\n    } else {\n      placeholder = \"Add options\"\n    }\n  }\n  const selectOptions: MultiselectOption[] = options.map((option: string) => {\n    return {\n      label: option,\n      value: option,\n    }\n  })\n\n  // Check if we have more than 10 options in the selectbox.\n  // If that's true, we show the keyboard on mobile. If not, we hide it.\n  const showKeyboardOnMobile = options.length > 10\n\n  return (\n    <div className=\"stMultiSelect\" data-testid=\"stMultiSelect\">\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledUISelect>\n        <UISelect\n          creatable={element.acceptNewOptions ?? false}\n          options={selectOptions}\n          labelKey=\"label\"\n          valueKey=\"value\"\n          aria-label={element.label}\n          placeholder={placeholder}\n          type={TYPE.select}\n          multi\n          onChange={onChange}\n          value={valueFromState}\n          disabled={disabled}\n          size={\"compact\"}\n          noResultsMsg={getNoResultsMsg}\n          filterOptions={filterOptions}\n          closeOnSelect={false}\n          overrides={{\n            Popover: {\n              props: {\n                overrides: {\n                  Body: {\n                    style: () => ({\n                      marginTop: theme.spacing.px,\n                    }),\n                  },\n                },\n              },\n            },\n            SelectArrow: {\n              component: ChevronDown,\n              props: {\n                overrides: {\n                  Svg: {\n                    style: () => ({\n                      width: theme.iconSizes.xl,\n                      height: theme.iconSizes.xl,\n                    }),\n                  },\n                },\n              },\n            },\n\n            IconsContainer: {\n              style: () => ({\n                paddingRight: theme.spacing.sm,\n              }),\n            },\n            ControlContainer: {\n              style: {\n                minHeight: theme.sizes.minElementHeight,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n            Placeholder: {\n              style: () => ({\n                flex: \"inherit\",\n                color: disabled\n                  ? theme.colors.fadedText40\n                  : theme.colors.fadedText60,\n              }),\n            },\n            ValueContainer: {\n              style: () => ({\n                paddingLeft: theme.spacing.sm,\n                paddingTop: theme.spacing.none,\n                paddingBottom: theme.spacing.none,\n                paddingRight: theme.spacing.none,\n              }),\n            },\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // setting this width and height makes the clear-icon align with dropdown arrows of other input fields\n                      padding: theme.spacing.threeXS,\n                      height: theme.sizes.clearIconSize,\n                      width: theme.sizes.clearIconSize,\n                      cursor: \"pointer\",\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            SearchIcon: {\n              style: {\n                color: theme.colors.darkGray,\n              },\n            },\n            Tag: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      borderTopLeftRadius: theme.radii.md,\n                      borderTopRightRadius: theme.radii.md,\n                      borderBottomRightRadius: theme.radii.md,\n                      borderBottomLeftRadius: theme.radii.md,\n                      fontSize: theme.fontSizes.md,\n                      paddingLeft: theme.spacing.sm,\n                      marginLeft: theme.spacing.none,\n                      marginRight: theme.spacing.sm,\n                      // The tag height is derived from the minElementHeight\n                      // minus a top and bottom padding (2 * spacing.xs)\n                      // to nicely fit into the input field.\n                      height: `calc(${theme.sizes.minElementHeight} - 2 * ${theme.spacing.xs})`,\n                      maxWidth: `calc(100% - ${theme.spacing.lg})`,\n                      // Using !important because the alternative would be\n                      // uglier: we'd have to put it under a selector like\n                      // \"&[role=\"button\"]:not(:disabled)\" in order to win in\n                      // the order of the precendence.\n                      cursor: \"default !important\",\n                    },\n                  },\n                  Action: {\n                    style: {\n                      paddingLeft: 0,\n                    },\n                  },\n                  ActionIcon: {\n                    props: {\n                      overrides: {\n                        Svg: {\n                          style: {\n                            // The action icon should be around 0.625% of the parent font size.\n                            width: \"0.625em\",\n                            height: \"0.625em\",\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            MultiValue: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      fontSize: theme.fontSizes.sm,\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                // Change the 'readonly' prop to hide the mobile keyboard if options < 10\n                readOnly:\n                  isMobile && showKeyboardOnMobile === false\n                    ? \"readonly\"\n                    : null,\n              },\n            },\n            Dropdown: { component: VirtualDropdown },\n          }}\n        />\n      </StyledUISelect>\n    </div>\n  )\n}\n\nexport default memo(Multiselect)\n"],"names":["StyledUISelect","target","theme","background","colors","fadedText05","getStateFromWidgetMgr","widgetMgr","element","getStringArrayValue","getDefaultStateFromProto","default","map","i","options","getCurrStateFromProto","rawValues","updateWidgetMgrState","valueWithSource","fragmentId","setStringArrayValue","value","fromUi","Multiselect","props","useTheme","setValueWithSource","useBasicWidgetState","overMaxSelections","maxSelections","length","getNoResultsMsg","useMemo","option","valueFromState","label","generateNewState","useCallback","data","type","without","concat","Error","onChange","params","filterOptions","filterValue","unselectedOptions","filter","includes","fuzzyFilterSelectOptions","disabled","placeholder","acceptNewOptions","selectOptions","showKeyboardOnMobile","jsxs","jsx","WidgetLabel","labelVisibilityProtoValueToEnum","labelVisibility","help","StyledWidgetLabelHelp","TooltipIcon","Placement","TOP_RIGHT","UISelect","TYPE","select","Popover","overrides","Body","style","marginTop","spacing","px","SelectArrow","component","ChevronDown","Svg","width","iconSizes","xl","height","IconsContainer","paddingRight","sm","ControlContainer","minHeight","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Placeholder","flex","color","fadedText40","fadedText60","ValueContainer","paddingLeft","paddingTop","none","paddingBottom","ClearIcon","darkGray","padding","threeXS","clearIconSize","cursor","fill","bodyText","SearchIcon","Tag","Root","borderTopLeftRadius","radii","md","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","fontSize","fontSizes","marginLeft","marginRight","xs","maxWidth","lg","Action","ActionIcon","MultiValue","Input","readOnly","isMobile","Dropdown","VirtualDropdown","memo"],"mappings":"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"}